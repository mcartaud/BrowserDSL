/*
* generated by Xtext
*/
grammar InternalBrowserDSL;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.xtext.mda.project.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.mda.project.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.xtext.mda.project.services.BrowserDSLGrammarAccess;

}

@parser::members {
 
 	private BrowserDSLGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(BrowserDSLGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleProgram
entryRuleProgram 
:
{ before(grammarAccess.getProgramRule()); }
	 ruleProgram
{ after(grammarAccess.getProgramRule()); } 
	 EOF 
;

// Rule Program
ruleProgram
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProgramAccess().getGroup()); }
(rule__Program__Group__0)
{ after(grammarAccess.getProgramAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSubroutine
entryRuleSubroutine 
:
{ before(grammarAccess.getSubroutineRule()); }
	 ruleSubroutine
{ after(grammarAccess.getSubroutineRule()); } 
	 EOF 
;

// Rule Subroutine
ruleSubroutine
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSubroutineAccess().getGroup()); }
(rule__Subroutine__Group__0)
{ after(grammarAccess.getSubroutineAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSubBody
entryRuleSubBody 
:
{ before(grammarAccess.getSubBodyRule()); }
	 ruleSubBody
{ after(grammarAccess.getSubBodyRule()); } 
	 EOF 
;

// Rule SubBody
ruleSubBody
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSubBodyAccess().getGroup()); }
(rule__SubBody__Group__0)
{ after(grammarAccess.getSubBodyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleHead
entryRuleHead 
:
{ before(grammarAccess.getHeadRule()); }
	 ruleHead
{ after(grammarAccess.getHeadRule()); } 
	 EOF 
;

// Rule Head
ruleHead
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getHeadAccess().getAlternatives()); }
(rule__Head__Alternatives)
{ after(grammarAccess.getHeadAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionName
entryRuleFunctionName 
:
{ before(grammarAccess.getFunctionNameRule()); }
	 ruleFunctionName
{ after(grammarAccess.getFunctionNameRule()); } 
	 EOF 
;

// Rule FunctionName
ruleFunctionName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionNameAccess().getNameAssignment()); }
(rule__FunctionName__NameAssignment)
{ after(grammarAccess.getFunctionNameAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMain
entryRuleMain 
:
{ before(grammarAccess.getMainRule()); }
	 ruleMain
{ after(grammarAccess.getMainRule()); } 
	 EOF 
;

// Rule Main
ruleMain
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMainAccess().getGroup()); }
(rule__Main__Group__0)
{ after(grammarAccess.getMainAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBody
entryRuleBody 
:
{ before(grammarAccess.getBodyRule()); }
	 ruleBody
{ after(grammarAccess.getBodyRule()); } 
	 EOF 
;

// Rule Body
ruleBody
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBodyAccess().getGroup()); }
(rule__Body__Group__0)
{ after(grammarAccess.getBodyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableReference
entryRuleVariableReference 
:
{ before(grammarAccess.getVariableReferenceRule()); }
	 ruleVariableReference
{ after(grammarAccess.getVariableReferenceRule()); } 
	 EOF 
;

// Rule VariableReference
ruleVariableReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableReferenceAccess().getVarIDAssignment()); }
(rule__VariableReference__VarIDAssignment)
{ after(grammarAccess.getVariableReferenceAccess().getVarIDAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionReference
entryRuleFunctionReference 
:
{ before(grammarAccess.getFunctionReferenceRule()); }
	 ruleFunctionReference
{ after(grammarAccess.getFunctionReferenceRule()); } 
	 EOF 
;

// Rule FunctionReference
ruleFunctionReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionReferenceAccess().getFunctionNameAssignment()); }
(rule__FunctionReference__FunctionNameAssignment)
{ after(grammarAccess.getFunctionReferenceAccess().getFunctionNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionCall
entryRuleFunctionCall 
:
{ before(grammarAccess.getFunctionCallRule()); }
	 ruleFunctionCall
{ after(grammarAccess.getFunctionCallRule()); } 
	 EOF 
;

// Rule FunctionCall
ruleFunctionCall
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionCallAccess().getAlternatives()); }
(rule__FunctionCall__Alternatives)
{ after(grammarAccess.getFunctionCallAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCallType
entryRuleCallType 
:
{ before(grammarAccess.getCallTypeRule()); }
	 ruleCallType
{ after(grammarAccess.getCallTypeRule()); } 
	 EOF 
;

// Rule CallType
ruleCallType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCallTypeAccess().getAlternatives()); }
(rule__CallType__Alternatives)
{ after(grammarAccess.getCallTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariable
entryRuleVariable 
:
{ before(grammarAccess.getVariableRule()); }
	 ruleVariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule Variable
ruleVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableAccess().getVariableReferenceParserRuleCall()); }
	ruleVariableReference
{ after(grammarAccess.getVariableAccess().getVariableReferenceParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableName
entryRuleVariableName 
:
{ before(grammarAccess.getVariableNameRule()); }
	 ruleVariableName
{ after(grammarAccess.getVariableNameRule()); } 
	 EOF 
;

// Rule VariableName
ruleVariableName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableNameAccess().getNameAssignment()); }
(rule__VariableName__NameAssignment)
{ after(grammarAccess.getVariableNameAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDeclaration
entryRuleDeclaration 
:
{ before(grammarAccess.getDeclarationRule()); }
	 ruleDeclaration
{ after(grammarAccess.getDeclarationRule()); } 
	 EOF 
;

// Rule Declaration
ruleDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDeclarationAccess().getGroup()); }
(rule__Declaration__Group__0)
{ after(grammarAccess.getDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInstruction
entryRuleInstruction 
:
{ before(grammarAccess.getInstructionRule()); }
	 ruleInstruction
{ after(grammarAccess.getInstructionRule()); } 
	 EOF 
;

// Rule Instruction
ruleInstruction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInstructionAccess().getAlternatives()); }
(rule__Instruction__Alternatives)
{ after(grammarAccess.getInstructionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGoTo
entryRuleGoTo 
:
{ before(grammarAccess.getGoToRule()); }
	 ruleGoTo
{ after(grammarAccess.getGoToRule()); } 
	 EOF 
;

// Rule GoTo
ruleGoTo
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGoToAccess().getGroup()); }
(rule__GoTo__Group__0)
{ after(grammarAccess.getGoToAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCheckbox
entryRuleCheckbox 
:
{ before(grammarAccess.getCheckboxRule()); }
	 ruleCheckbox
{ after(grammarAccess.getCheckboxRule()); } 
	 EOF 
;

// Rule Checkbox
ruleCheckbox
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCheckboxAccess().getGroup()); }
(rule__Checkbox__Group__0)
{ after(grammarAccess.getCheckboxAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLink
entryRuleLink 
:
{ before(grammarAccess.getLinkRule()); }
	 ruleLink
{ after(grammarAccess.getLinkRule()); } 
	 EOF 
;

// Rule Link
ruleLink
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLinkAccess().getGroup()); }
(rule__Link__Group__0)
{ after(grammarAccess.getLinkAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleButton
entryRuleButton 
:
{ before(grammarAccess.getButtonRule()); }
	 ruleButton
{ after(grammarAccess.getButtonRule()); } 
	 EOF 
;

// Rule Button
ruleButton
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getButtonAccess().getGroup()); }
(rule__Button__Group__0)
{ after(grammarAccess.getButtonAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImage
entryRuleImage 
:
{ before(grammarAccess.getImageRule()); }
	 ruleImage
{ after(grammarAccess.getImageRule()); } 
	 EOF 
;

// Rule Image
ruleImage
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImageAccess().getGroup()); }
(rule__Image__Group__0)
{ after(grammarAccess.getImageAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTextField
entryRuleTextField 
:
{ before(grammarAccess.getTextFieldRule()); }
	 ruleTextField
{ after(grammarAccess.getTextFieldRule()); } 
	 EOF 
;

// Rule TextField
ruleTextField
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTextFieldAccess().getGroup()); }
(rule__TextField__Group__0)
{ after(grammarAccess.getTextFieldAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCheckboxAction
entryRuleCheckboxAction 
:
{ before(grammarAccess.getCheckboxActionRule()); }
	 ruleCheckboxAction
{ after(grammarAccess.getCheckboxActionRule()); } 
	 EOF 
;

// Rule CheckboxAction
ruleCheckboxAction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCheckboxActionAccess().getAlternatives()); }
(rule__CheckboxAction__Alternatives)
{ after(grammarAccess.getCheckboxActionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLinkAction
entryRuleLinkAction 
:
{ before(grammarAccess.getLinkActionRule()); }
	 ruleLinkAction
{ after(grammarAccess.getLinkActionRule()); } 
	 EOF 
;

// Rule LinkAction
ruleLinkAction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLinkActionAccess().getClickParserRuleCall()); }
	ruleClick
{ after(grammarAccess.getLinkActionAccess().getClickParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleButtonAction
entryRuleButtonAction 
:
{ before(grammarAccess.getButtonActionRule()); }
	 ruleButtonAction
{ after(grammarAccess.getButtonActionRule()); } 
	 EOF 
;

// Rule ButtonAction
ruleButtonAction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getButtonActionAccess().getClickParserRuleCall()); }
	ruleClick
{ after(grammarAccess.getButtonActionAccess().getClickParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImageAction
entryRuleImageAction 
:
{ before(grammarAccess.getImageActionRule()); }
	 ruleImageAction
{ after(grammarAccess.getImageActionRule()); } 
	 EOF 
;

// Rule ImageAction
ruleImageAction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImageActionAccess().getClickParserRuleCall()); }
	ruleClick
{ after(grammarAccess.getImageActionAccess().getClickParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTextAction
entryRuleTextAction 
:
{ before(grammarAccess.getTextActionRule()); }
	 ruleTextAction
{ after(grammarAccess.getTextActionRule()); } 
	 EOF 
;

// Rule TextAction
ruleTextAction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTextActionAccess().getAlternatives()); }
(rule__TextAction__Alternatives)
{ after(grammarAccess.getTextActionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClick
entryRuleClick 
:
{ before(grammarAccess.getClickRule()); }
	 ruleClick
{ after(grammarAccess.getClickRule()); } 
	 EOF 
;

// Rule Click
ruleClick
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClickAccess().getActionAssignment()); }
(rule__Click__ActionAssignment)
{ after(grammarAccess.getClickAccess().getActionAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIsCheck
entryRuleIsCheck 
:
{ before(grammarAccess.getIsCheckRule()); }
	 ruleIsCheck
{ after(grammarAccess.getIsCheckRule()); } 
	 EOF 
;

// Rule IsCheck
ruleIsCheck
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIsCheckAccess().getGroup()); }
(rule__IsCheck__Group__0)
{ after(grammarAccess.getIsCheckAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClear
entryRuleClear 
:
{ before(grammarAccess.getClearRule()); }
	 ruleClear
{ after(grammarAccess.getClearRule()); } 
	 EOF 
;

// Rule Clear
ruleClear
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClearAccess().getActionAssignment()); }
(rule__Clear__ActionAssignment)
{ after(grammarAccess.getClearAccess().getActionAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCheckValue
entryRuleCheckValue 
:
{ before(grammarAccess.getCheckValueRule()); }
	 ruleCheckValue
{ after(grammarAccess.getCheckValueRule()); } 
	 EOF 
;

// Rule CheckValue
ruleCheckValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCheckValueAccess().getGroup()); }
(rule__CheckValue__Group__0)
{ after(grammarAccess.getCheckValueAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFill
entryRuleFill 
:
{ before(grammarAccess.getFillRule()); }
	 ruleFill
{ after(grammarAccess.getFillRule()); } 
	 EOF 
;

// Rule Fill
ruleFill
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFillAccess().getGroup()); }
(rule__Fill__Group__0)
{ after(grammarAccess.getFillAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValues
entryRuleValues 
:
{ before(grammarAccess.getValuesRule()); }
	 ruleValues
{ after(grammarAccess.getValuesRule()); } 
	 EOF 
;

// Rule Values
ruleValues
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValuesAccess().getAlternatives()); }
(rule__Values__Alternatives)
{ after(grammarAccess.getValuesAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntValue
entryRuleIntValue 
:
{ before(grammarAccess.getIntValueRule()); }
	 ruleIntValue
{ after(grammarAccess.getIntValueRule()); } 
	 EOF 
;

// Rule IntValue
ruleIntValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntValueAccess().getValueAssignment()); }
(rule__IntValue__ValueAssignment)
{ after(grammarAccess.getIntValueAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringValue
entryRuleStringValue 
:
{ before(grammarAccess.getStringValueRule()); }
	 ruleStringValue
{ after(grammarAccess.getStringValueRule()); } 
	 EOF 
;

// Rule StringValue
ruleStringValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringValueAccess().getValueAssignment()); }
(rule__StringValue__ValueAssignment)
{ after(grammarAccess.getStringValueAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBooleanValue
entryRuleBooleanValue 
:
{ before(grammarAccess.getBooleanValueRule()); }
	 ruleBooleanValue
{ after(grammarAccess.getBooleanValueRule()); } 
	 EOF 
;

// Rule BooleanValue
ruleBooleanValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanValueAccess().getValueAssignment()); }
(rule__BooleanValue__ValueAssignment)
{ after(grammarAccess.getBooleanValueAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule Boolean
ruleBoolean
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanAccess().getAlternatives()); }
(rule__Boolean__Alternatives)
{ after(grammarAccess.getBooleanAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule OpenBrowser
ruleOpenBrowser
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpenBrowserAccess().getAlternatives()); }
(rule__OpenBrowser__Alternatives)
{ after(grammarAccess.getOpenBrowserAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Head__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeadAccess().getGroup_0()); }
(rule__Head__Group_0__0)
{ after(grammarAccess.getHeadAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getHeadAccess().getGroup_1()); }
(rule__Head__Group_1__0)
{ after(grammarAccess.getHeadAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getGroup_0()); }
(rule__FunctionCall__Group_0__0)
{ after(grammarAccess.getFunctionCallAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getFunctionCallAccess().getGroup_1()); }
(rule__FunctionCall__Group_1__0)
{ after(grammarAccess.getFunctionCallAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CallType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallTypeAccess().getValuesParserRuleCall_0()); }
	ruleValues
{ after(grammarAccess.getCallTypeAccess().getValuesParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getCallTypeAccess().getVariableParserRuleCall_1()); }
	ruleVariable
{ after(grammarAccess.getCallTypeAccess().getVariableParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstructionAccess().getLinkParserRuleCall_0()); }
	ruleLink
{ after(grammarAccess.getInstructionAccess().getLinkParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getButtonParserRuleCall_1()); }
	ruleButton
{ after(grammarAccess.getInstructionAccess().getButtonParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getImageParserRuleCall_2()); }
	ruleImage
{ after(grammarAccess.getInstructionAccess().getImageParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getTextFieldParserRuleCall_3()); }
	ruleTextField
{ after(grammarAccess.getInstructionAccess().getTextFieldParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getCheckboxParserRuleCall_4()); }
	ruleCheckbox
{ after(grammarAccess.getInstructionAccess().getCheckboxParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getGoToParserRuleCall_5()); }
	ruleGoTo
{ after(grammarAccess.getInstructionAccess().getGoToParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getFunctionCallParserRuleCall_6()); }
	ruleFunctionCall
{ after(grammarAccess.getInstructionAccess().getFunctionCallParserRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Checkbox__IdAlternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheckboxAccess().getIdStringValueParserRuleCall_1_0_0()); }
	ruleStringValue
{ after(grammarAccess.getCheckboxAccess().getIdStringValueParserRuleCall_1_0_0()); }
)

    |(
{ before(grammarAccess.getCheckboxAccess().getIdVariableParserRuleCall_1_0_1()); }
	ruleVariable
{ after(grammarAccess.getCheckboxAccess().getIdVariableParserRuleCall_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Link__IdAlternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkAccess().getIdStringValueParserRuleCall_1_0_0()); }
	ruleStringValue
{ after(grammarAccess.getLinkAccess().getIdStringValueParserRuleCall_1_0_0()); }
)

    |(
{ before(grammarAccess.getLinkAccess().getIdVariableParserRuleCall_1_0_1()); }
	ruleVariable
{ after(grammarAccess.getLinkAccess().getIdVariableParserRuleCall_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Button__IdAlternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getButtonAccess().getIdStringValueParserRuleCall_1_0_0()); }
	ruleStringValue
{ after(grammarAccess.getButtonAccess().getIdStringValueParserRuleCall_1_0_0()); }
)

    |(
{ before(grammarAccess.getButtonAccess().getIdVariableParserRuleCall_1_0_1()); }
	ruleVariable
{ after(grammarAccess.getButtonAccess().getIdVariableParserRuleCall_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Image__IdAlternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImageAccess().getIdStringValueParserRuleCall_1_0_0()); }
	ruleStringValue
{ after(grammarAccess.getImageAccess().getIdStringValueParserRuleCall_1_0_0()); }
)

    |(
{ before(grammarAccess.getImageAccess().getIdVariableParserRuleCall_1_0_1()); }
	ruleVariable
{ after(grammarAccess.getImageAccess().getIdVariableParserRuleCall_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TextField__IdAlternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextFieldAccess().getIdStringValueParserRuleCall_1_0_0()); }
	ruleStringValue
{ after(grammarAccess.getTextFieldAccess().getIdStringValueParserRuleCall_1_0_0()); }
)

    |(
{ before(grammarAccess.getTextFieldAccess().getIdVariableParserRuleCall_1_0_1()); }
	ruleVariable
{ after(grammarAccess.getTextFieldAccess().getIdVariableParserRuleCall_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CheckboxAction__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheckboxActionAccess().getClickParserRuleCall_0()); }
	ruleClick
{ after(grammarAccess.getCheckboxActionAccess().getClickParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getCheckboxActionAccess().getIsCheckParserRuleCall_1()); }
	ruleIsCheck
{ after(grammarAccess.getCheckboxActionAccess().getIsCheckParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getCheckboxActionAccess().getClearParserRuleCall_2()); }
	ruleClear
{ after(grammarAccess.getCheckboxActionAccess().getClearParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TextAction__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextActionAccess().getCheckValueParserRuleCall_0()); }
	ruleCheckValue
{ after(grammarAccess.getTextActionAccess().getCheckValueParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTextActionAccess().getFillParserRuleCall_1()); }
	ruleFill
{ after(grammarAccess.getTextActionAccess().getFillParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getTextActionAccess().getClearParserRuleCall_2()); }
	ruleClear
{ after(grammarAccess.getTextActionAccess().getClearParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CheckValue__ValueAlternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheckValueAccess().getValueStringValueParserRuleCall_1_0_0()); }
	ruleStringValue
{ after(grammarAccess.getCheckValueAccess().getValueStringValueParserRuleCall_1_0_0()); }
)

    |(
{ before(grammarAccess.getCheckValueAccess().getValueVariableParserRuleCall_1_0_1()); }
	ruleVariable
{ after(grammarAccess.getCheckValueAccess().getValueVariableParserRuleCall_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Fill__ValueAlternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFillAccess().getValueStringValueParserRuleCall_1_0_0()); }
	ruleStringValue
{ after(grammarAccess.getFillAccess().getValueStringValueParserRuleCall_1_0_0()); }
)

    |(
{ before(grammarAccess.getFillAccess().getValueVariableParserRuleCall_1_0_1()); }
	ruleVariable
{ after(grammarAccess.getFillAccess().getValueVariableParserRuleCall_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Values__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuesAccess().getIntValueParserRuleCall_0()); }
	ruleIntValue
{ after(grammarAccess.getValuesAccess().getIntValueParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getValuesAccess().getStringValueParserRuleCall_1()); }
	ruleStringValue
{ after(grammarAccess.getValuesAccess().getStringValueParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getValuesAccess().getBooleanValueParserRuleCall_2()); }
	ruleBooleanValue
{ after(grammarAccess.getValuesAccess().getBooleanValueParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanAccess().getTrueEnumLiteralDeclaration_0()); }
(	'true' 
)
{ after(grammarAccess.getBooleanAccess().getTrueEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getBooleanAccess().getFalseEnumLiteralDeclaration_1()); }
(	'false' 
)
{ after(grammarAccess.getBooleanAccess().getFalseEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpenBrowser__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpenBrowserAccess().getChromeEnumLiteralDeclaration_0()); }
(	'Chrome' 
)
{ after(grammarAccess.getOpenBrowserAccess().getChromeEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getOpenBrowserAccess().getFirefoxEnumLiteralDeclaration_1()); }
(	'Firefox' 
)
{ after(grammarAccess.getOpenBrowserAccess().getFirefoxEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Program__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group__0__Impl
	rule__Program__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getBrowserKeyword_0()); }

	'browser ' 

{ after(grammarAccess.getProgramAccess().getBrowserKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group__1__Impl
	rule__Program__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getBrowserAssignment_1()); }
(rule__Program__BrowserAssignment_1)
{ after(grammarAccess.getProgramAccess().getBrowserAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group__2__Impl
	rule__Program__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getProgramAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group__3__Impl
	rule__Program__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getVariablesAssignment_3()); }
(rule__Program__VariablesAssignment_3)*
{ after(grammarAccess.getProgramAccess().getVariablesAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group__4__Impl
	rule__Program__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getSubroutinesAssignment_4()); }
(rule__Program__SubroutinesAssignment_4)*
{ after(grammarAccess.getProgramAccess().getSubroutinesAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getMainAssignment_5()); }
(rule__Program__MainAssignment_5)
{ after(grammarAccess.getProgramAccess().getMainAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Subroutine__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Subroutine__Group__0__Impl
	rule__Subroutine__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Subroutine__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubroutineAccess().getSubKeyword_0()); }

	'sub ' 

{ after(grammarAccess.getSubroutineAccess().getSubKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Subroutine__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Subroutine__Group__1__Impl
	rule__Subroutine__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Subroutine__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubroutineAccess().getHeadAssignment_1()); }
(rule__Subroutine__HeadAssignment_1)
{ after(grammarAccess.getSubroutineAccess().getHeadAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Subroutine__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Subroutine__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Subroutine__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubroutineAccess().getBodyAssignment_2()); }
(rule__Subroutine__BodyAssignment_2)
{ after(grammarAccess.getSubroutineAccess().getBodyAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SubBody__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubBody__Group__0__Impl
	rule__SubBody__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubBody__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubBodyAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getSubBodyAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubBody__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubBody__Group__1__Impl
	rule__SubBody__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SubBody__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubBodyAccess().getInstructionsAssignment_1()); }
(rule__SubBody__InstructionsAssignment_1)
{ after(grammarAccess.getSubBodyAccess().getInstructionsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubBody__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubBody__Group__2__Impl
	rule__SubBody__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SubBody__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubBodyAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getSubBodyAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubBody__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubBody__Group__3__Impl
	rule__SubBody__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SubBody__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubBodyAccess().getGroup_3()); }
(rule__SubBody__Group_3__0)*
{ after(grammarAccess.getSubBodyAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubBody__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubBody__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubBody__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubBodyAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getSubBodyAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__SubBody__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubBody__Group_3__0__Impl
	rule__SubBody__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubBody__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubBodyAccess().getInstructionsAssignment_3_0()); }
(rule__SubBody__InstructionsAssignment_3_0)
{ after(grammarAccess.getSubBodyAccess().getInstructionsAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubBody__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubBody__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubBody__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubBodyAccess().getSemicolonKeyword_3_1()); }

	';' 

{ after(grammarAccess.getSubBodyAccess().getSemicolonKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Head__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Head__Group_0__0__Impl
	rule__Head__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Head__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeadAccess().getNameAssignment_0_0()); }
(rule__Head__NameAssignment_0_0)
{ after(grammarAccess.getHeadAccess().getNameAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Head__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Head__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Head__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeadAccess().getLeftParenthesisRightParenthesisKeyword_0_1()); }

	'()' 

{ after(grammarAccess.getHeadAccess().getLeftParenthesisRightParenthesisKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Head__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Head__Group_1__0__Impl
	rule__Head__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Head__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeadAccess().getNameAssignment_1_0()); }
(rule__Head__NameAssignment_1_0)
{ after(grammarAccess.getHeadAccess().getNameAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Head__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Head__Group_1__1__Impl
	rule__Head__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Head__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeadAccess().getVarKeyword_1_1()); }

	'(var ' 

{ after(grammarAccess.getHeadAccess().getVarKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Head__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Head__Group_1__2__Impl
	rule__Head__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Head__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeadAccess().getNameParametersAssignment_1_2()); }
(rule__Head__NameParametersAssignment_1_2)
{ after(grammarAccess.getHeadAccess().getNameParametersAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Head__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Head__Group_1__3__Impl
	rule__Head__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Head__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeadAccess().getGroup_1_3()); }
(rule__Head__Group_1_3__0)*
{ after(grammarAccess.getHeadAccess().getGroup_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Head__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Head__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Head__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeadAccess().getRightParenthesisKeyword_1_4()); }

	')' 

{ after(grammarAccess.getHeadAccess().getRightParenthesisKeyword_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Head__Group_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Head__Group_1_3__0__Impl
	rule__Head__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Head__Group_1_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeadAccess().getVarKeyword_1_3_0()); }

	', var ' 

{ after(grammarAccess.getHeadAccess().getVarKeyword_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Head__Group_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Head__Group_1_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Head__Group_1_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeadAccess().getNameParametersAssignment_1_3_1()); }
(rule__Head__NameParametersAssignment_1_3_1)
{ after(grammarAccess.getHeadAccess().getNameParametersAssignment_1_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Main__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Main__Group__0__Impl
	rule__Main__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Main__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainAccess().getMainKeyword_0()); }

	'main' 

{ after(grammarAccess.getMainAccess().getMainKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Main__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Main__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Main__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainAccess().getBodyAssignment_1()); }
(rule__Main__BodyAssignment_1)
{ after(grammarAccess.getMainAccess().getBodyAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Body__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Body__Group__0__Impl
	rule__Body__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBodyAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getBodyAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Body__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Body__Group__1__Impl
	rule__Body__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBodyAccess().getUrlAssignment_1()); }
(rule__Body__UrlAssignment_1)
{ after(grammarAccess.getBodyAccess().getUrlAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Body__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Body__Group__2__Impl
	rule__Body__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBodyAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getBodyAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Body__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Body__Group__3__Impl
	rule__Body__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBodyAccess().getInstructionsAssignment_3()); }
(rule__Body__InstructionsAssignment_3)
{ after(grammarAccess.getBodyAccess().getInstructionsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Body__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Body__Group__4__Impl
	rule__Body__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBodyAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getBodyAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Body__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Body__Group__5__Impl
	rule__Body__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBodyAccess().getGroup_5()); }
(rule__Body__Group_5__0)*
{ after(grammarAccess.getBodyAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Body__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Body__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBodyAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getBodyAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Body__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Body__Group_5__0__Impl
	rule__Body__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBodyAccess().getInstructionsAssignment_5_0()); }
(rule__Body__InstructionsAssignment_5_0)
{ after(grammarAccess.getBodyAccess().getInstructionsAssignment_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Body__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Body__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBodyAccess().getSemicolonKeyword_5_1()); }

	';' 

{ after(grammarAccess.getBodyAccess().getSemicolonKeyword_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionCall__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group_0__0__Impl
	rule__FunctionCall__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getFunctionAssignment_0_0()); }
(rule__FunctionCall__FunctionAssignment_0_0)
{ after(grammarAccess.getFunctionCallAccess().getFunctionAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getLeftParenthesisRightParenthesisKeyword_0_1()); }

	'()' 

{ after(grammarAccess.getFunctionCallAccess().getLeftParenthesisRightParenthesisKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionCall__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group_1__0__Impl
	rule__FunctionCall__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getFunctionAssignment_1_0()); }
(rule__FunctionCall__FunctionAssignment_1_0)
{ after(grammarAccess.getFunctionCallAccess().getFunctionAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group_1__1__Impl
	rule__FunctionCall__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getLeftParenthesisKeyword_1_1()); }

	'(' 

{ after(grammarAccess.getFunctionCallAccess().getLeftParenthesisKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group_1__2__Impl
	rule__FunctionCall__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getParametersAssignment_1_2()); }
(rule__FunctionCall__ParametersAssignment_1_2)
{ after(grammarAccess.getFunctionCallAccess().getParametersAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group_1__3__Impl
	rule__FunctionCall__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getGroup_1_3()); }
(rule__FunctionCall__Group_1_3__0)*
{ after(grammarAccess.getFunctionCallAccess().getGroup_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getRightParenthesisKeyword_1_4()); }

	')' 

{ after(grammarAccess.getFunctionCallAccess().getRightParenthesisKeyword_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__FunctionCall__Group_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group_1_3__0__Impl
	rule__FunctionCall__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_1_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getCommaSpaceKeyword_1_3_0()); }

	', ' 

{ after(grammarAccess.getFunctionCallAccess().getCommaSpaceKeyword_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group_1_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_1_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getParametersAssignment_1_3_1()); }
(rule__FunctionCall__ParametersAssignment_1_3_1)
{ after(grammarAccess.getFunctionCallAccess().getParametersAssignment_1_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Declaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group__0__Impl
	rule__Declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getVarKeyword_0()); }

	'var ' 

{ after(grammarAccess.getDeclarationAccess().getVarKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group__1__Impl
	rule__Declaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getVariableAssignment_1()); }
(rule__Declaration__VariableAssignment_1)
{ after(grammarAccess.getDeclarationAccess().getVariableAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group__2__Impl
	rule__Declaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getSpaceEqualsSignSpaceKeyword_2()); }

	' = ' 

{ after(grammarAccess.getDeclarationAccess().getSpaceEqualsSignSpaceKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group__3__Impl
	rule__Declaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getValueAssignment_3()); }
(rule__Declaration__ValueAssignment_3)
{ after(grammarAccess.getDeclarationAccess().getValueAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getDeclarationAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__GoTo__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GoTo__Group__0__Impl
	rule__GoTo__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GoTo__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGoToAccess().getGoToKeyword_0()); }

	'goTo(' 

{ after(grammarAccess.getGoToAccess().getGoToKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GoTo__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GoTo__Group__1__Impl
	rule__GoTo__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GoTo__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGoToAccess().getUrlAssignment_1()); }
(rule__GoTo__UrlAssignment_1)
{ after(grammarAccess.getGoToAccess().getUrlAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GoTo__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GoTo__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GoTo__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGoToAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getGoToAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Checkbox__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Checkbox__Group__0__Impl
	rule__Checkbox__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Checkbox__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheckboxAccess().getCheckboxKeyword_0()); }

	'checkbox(' 

{ after(grammarAccess.getCheckboxAccess().getCheckboxKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Checkbox__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Checkbox__Group__1__Impl
	rule__Checkbox__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Checkbox__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheckboxAccess().getIdAssignment_1()); }
(rule__Checkbox__IdAssignment_1)
{ after(grammarAccess.getCheckboxAccess().getIdAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Checkbox__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Checkbox__Group__2__Impl
	rule__Checkbox__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Checkbox__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheckboxAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getCheckboxAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Checkbox__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Checkbox__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Checkbox__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheckboxAccess().getActionAssignment_3()); }
(rule__Checkbox__ActionAssignment_3)
{ after(grammarAccess.getCheckboxAccess().getActionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Link__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Link__Group__0__Impl
	rule__Link__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkAccess().getLinkKeyword_0()); }

	'link(' 

{ after(grammarAccess.getLinkAccess().getLinkKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Link__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Link__Group__1__Impl
	rule__Link__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkAccess().getIdAssignment_1()); }
(rule__Link__IdAssignment_1)
{ after(grammarAccess.getLinkAccess().getIdAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Link__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Link__Group__2__Impl
	rule__Link__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getLinkAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Link__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Link__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkAccess().getActionAssignment_3()); }
(rule__Link__ActionAssignment_3)
{ after(grammarAccess.getLinkAccess().getActionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Button__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Button__Group__0__Impl
	rule__Button__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getButtonAccess().getButtonKeyword_0()); }

	'button(' 

{ after(grammarAccess.getButtonAccess().getButtonKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Button__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Button__Group__1__Impl
	rule__Button__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getButtonAccess().getIdAssignment_1()); }
(rule__Button__IdAssignment_1)
{ after(grammarAccess.getButtonAccess().getIdAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Button__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Button__Group__2__Impl
	rule__Button__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getButtonAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getButtonAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Button__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Button__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getButtonAccess().getActionAssignment_3()); }
(rule__Button__ActionAssignment_3)
{ after(grammarAccess.getButtonAccess().getActionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Image__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Image__Group__0__Impl
	rule__Image__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Image__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImageAccess().getImageKeyword_0()); }

	'image(' 

{ after(grammarAccess.getImageAccess().getImageKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Image__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Image__Group__1__Impl
	rule__Image__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Image__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImageAccess().getIdAssignment_1()); }
(rule__Image__IdAssignment_1)
{ after(grammarAccess.getImageAccess().getIdAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Image__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Image__Group__2__Impl
	rule__Image__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Image__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImageAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getImageAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Image__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Image__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Image__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImageAccess().getActionAssignment_3()); }
(rule__Image__ActionAssignment_3)
{ after(grammarAccess.getImageAccess().getActionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TextField__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TextField__Group__0__Impl
	rule__TextField__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TextField__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextFieldAccess().getTextFieldKeyword_0()); }

	'textField(' 

{ after(grammarAccess.getTextFieldAccess().getTextFieldKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TextField__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TextField__Group__1__Impl
	rule__TextField__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TextField__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextFieldAccess().getIdAssignment_1()); }
(rule__TextField__IdAssignment_1)
{ after(grammarAccess.getTextFieldAccess().getIdAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TextField__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TextField__Group__2__Impl
	rule__TextField__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TextField__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextFieldAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getTextFieldAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TextField__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TextField__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TextField__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextFieldAccess().getActionAssignment_3()); }
(rule__TextField__ActionAssignment_3)
{ after(grammarAccess.getTextFieldAccess().getActionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__IsCheck__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IsCheck__Group__0__Impl
	rule__IsCheck__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IsCheck__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsCheckAccess().getIsCheckKeyword_0()); }

	'.isCheck(' 

{ after(grammarAccess.getIsCheckAccess().getIsCheckKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IsCheck__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IsCheck__Group__1__Impl
	rule__IsCheck__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IsCheck__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsCheckAccess().getValAssignment_1()); }
(rule__IsCheck__ValAssignment_1)
{ after(grammarAccess.getIsCheckAccess().getValAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IsCheck__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IsCheck__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IsCheck__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsCheckAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getIsCheckAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__CheckValue__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CheckValue__Group__0__Impl
	rule__CheckValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckValue__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheckValueAccess().getVerifyKeyword_0()); }

	'.verify(' 

{ after(grammarAccess.getCheckValueAccess().getVerifyKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CheckValue__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CheckValue__Group__1__Impl
	rule__CheckValue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckValue__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheckValueAccess().getValueAssignment_1()); }
(rule__CheckValue__ValueAssignment_1)
{ after(grammarAccess.getCheckValueAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CheckValue__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CheckValue__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckValue__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheckValueAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getCheckValueAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Fill__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Fill__Group__0__Impl
	rule__Fill__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Fill__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFillAccess().getFillKeyword_0()); }

	'.fill(' 

{ after(grammarAccess.getFillAccess().getFillKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Fill__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Fill__Group__1__Impl
	rule__Fill__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Fill__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFillAccess().getValueAssignment_1()); }
(rule__Fill__ValueAssignment_1)
{ after(grammarAccess.getFillAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Fill__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Fill__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Fill__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFillAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getFillAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__Program__BrowserAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getBrowserOpenBrowserEnumRuleCall_1_0()); }
	ruleOpenBrowser{ after(grammarAccess.getProgramAccess().getBrowserOpenBrowserEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Program__VariablesAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getVariablesDeclarationParserRuleCall_3_0()); }
	ruleDeclaration{ after(grammarAccess.getProgramAccess().getVariablesDeclarationParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Program__SubroutinesAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getSubroutinesSubroutineParserRuleCall_4_0()); }
	ruleSubroutine{ after(grammarAccess.getProgramAccess().getSubroutinesSubroutineParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Program__MainAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getMainMainParserRuleCall_5_0()); }
	ruleMain{ after(grammarAccess.getProgramAccess().getMainMainParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Subroutine__HeadAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubroutineAccess().getHeadHeadParserRuleCall_1_0()); }
	ruleHead{ after(grammarAccess.getSubroutineAccess().getHeadHeadParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Subroutine__BodyAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubroutineAccess().getBodySubBodyParserRuleCall_2_0()); }
	ruleSubBody{ after(grammarAccess.getSubroutineAccess().getBodySubBodyParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubBody__InstructionsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubBodyAccess().getInstructionsInstructionParserRuleCall_1_0()); }
	ruleInstruction{ after(grammarAccess.getSubBodyAccess().getInstructionsInstructionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubBody__InstructionsAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubBodyAccess().getInstructionsInstructionParserRuleCall_3_0_0()); }
	ruleInstruction{ after(grammarAccess.getSubBodyAccess().getInstructionsInstructionParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Head__NameAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeadAccess().getNameFunctionNameParserRuleCall_0_0_0()); }
	ruleFunctionName{ after(grammarAccess.getHeadAccess().getNameFunctionNameParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Head__NameAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeadAccess().getNameFunctionNameParserRuleCall_1_0_0()); }
	ruleFunctionName{ after(grammarAccess.getHeadAccess().getNameFunctionNameParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Head__NameParametersAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeadAccess().getNameParametersVariableNameParserRuleCall_1_2_0()); }
	ruleVariableName{ after(grammarAccess.getHeadAccess().getNameParametersVariableNameParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Head__NameParametersAssignment_1_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeadAccess().getNameParametersVariableNameParserRuleCall_1_3_1_0()); }
	ruleVariableName{ after(grammarAccess.getHeadAccess().getNameParametersVariableNameParserRuleCall_1_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionName__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionNameAccess().getNameSTRINGTerminalRuleCall_0()); }
	RULE_STRING{ after(grammarAccess.getFunctionNameAccess().getNameSTRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Main__BodyAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainAccess().getBodyBodyParserRuleCall_1_0()); }
	ruleBody{ after(grammarAccess.getMainAccess().getBodyBodyParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Body__UrlAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBodyAccess().getUrlGoToParserRuleCall_1_0()); }
	ruleGoTo{ after(grammarAccess.getBodyAccess().getUrlGoToParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Body__InstructionsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBodyAccess().getInstructionsInstructionParserRuleCall_3_0()); }
	ruleInstruction{ after(grammarAccess.getBodyAccess().getInstructionsInstructionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Body__InstructionsAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBodyAccess().getInstructionsInstructionParserRuleCall_5_0_0()); }
	ruleInstruction{ after(grammarAccess.getBodyAccess().getInstructionsInstructionParserRuleCall_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableReference__VarIDAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableReferenceAccess().getVarIDVariableNameCrossReference_0()); }
(
{ before(grammarAccess.getVariableReferenceAccess().getVarIDVariableNameIDTerminalRuleCall_0_1()); }
	RULE_ID{ after(grammarAccess.getVariableReferenceAccess().getVarIDVariableNameIDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getVariableReferenceAccess().getVarIDVariableNameCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionReference__FunctionNameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionReferenceAccess().getFunctionNameFunctionNameCrossReference_0()); }
(
{ before(grammarAccess.getFunctionReferenceAccess().getFunctionNameFunctionNameIDTerminalRuleCall_0_1()); }
	RULE_ID{ after(grammarAccess.getFunctionReferenceAccess().getFunctionNameFunctionNameIDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getFunctionReferenceAccess().getFunctionNameFunctionNameCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__FunctionAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getFunctionFunctionReferenceParserRuleCall_0_0_0()); }
	ruleFunctionReference{ after(grammarAccess.getFunctionCallAccess().getFunctionFunctionReferenceParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__FunctionAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getFunctionFunctionReferenceParserRuleCall_1_0_0()); }
	ruleFunctionReference{ after(grammarAccess.getFunctionCallAccess().getFunctionFunctionReferenceParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__ParametersAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getParametersCallTypeParserRuleCall_1_2_0()); }
	ruleCallType{ after(grammarAccess.getFunctionCallAccess().getParametersCallTypeParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__ParametersAssignment_1_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getParametersCallTypeParserRuleCall_1_3_1_0()); }
	ruleCallType{ after(grammarAccess.getFunctionCallAccess().getParametersCallTypeParserRuleCall_1_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableName__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableNameAccess().getNameSTRINGTerminalRuleCall_0()); }
	RULE_STRING{ after(grammarAccess.getVariableNameAccess().getNameSTRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__VariableAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getVariableVariableNameParserRuleCall_1_0()); }
	ruleVariableName{ after(grammarAccess.getDeclarationAccess().getVariableVariableNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__ValueAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getValueValuesParserRuleCall_3_0()); }
	ruleValues{ after(grammarAccess.getDeclarationAccess().getValueValuesParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GoTo__UrlAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGoToAccess().getUrlURLTerminalRuleCall_1_0()); }
	RULE_URL{ after(grammarAccess.getGoToAccess().getUrlURLTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Checkbox__IdAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheckboxAccess().getIdAlternatives_1_0()); }
(rule__Checkbox__IdAlternatives_1_0)
{ after(grammarAccess.getCheckboxAccess().getIdAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Checkbox__ActionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheckboxAccess().getActionCheckboxActionParserRuleCall_3_0()); }
	ruleCheckboxAction{ after(grammarAccess.getCheckboxAccess().getActionCheckboxActionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Link__IdAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkAccess().getIdAlternatives_1_0()); }
(rule__Link__IdAlternatives_1_0)
{ after(grammarAccess.getLinkAccess().getIdAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Link__ActionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkAccess().getActionLinkActionParserRuleCall_3_0()); }
	ruleLinkAction{ after(grammarAccess.getLinkAccess().getActionLinkActionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Button__IdAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getButtonAccess().getIdAlternatives_1_0()); }
(rule__Button__IdAlternatives_1_0)
{ after(grammarAccess.getButtonAccess().getIdAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Button__ActionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getButtonAccess().getActionButtonActionParserRuleCall_3_0()); }
	ruleButtonAction{ after(grammarAccess.getButtonAccess().getActionButtonActionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Image__IdAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImageAccess().getIdAlternatives_1_0()); }
(rule__Image__IdAlternatives_1_0)
{ after(grammarAccess.getImageAccess().getIdAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Image__ActionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImageAccess().getActionImageActionParserRuleCall_3_0()); }
	ruleImageAction{ after(grammarAccess.getImageAccess().getActionImageActionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TextField__IdAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextFieldAccess().getIdAlternatives_1_0()); }
(rule__TextField__IdAlternatives_1_0)
{ after(grammarAccess.getTextFieldAccess().getIdAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TextField__ActionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextFieldAccess().getActionTextActionParserRuleCall_3_0()); }
	ruleTextAction{ after(grammarAccess.getTextFieldAccess().getActionTextActionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Click__ActionAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClickAccess().getActionClickKeyword_0()); }
(
{ before(grammarAccess.getClickAccess().getActionClickKeyword_0()); }

	'.click()' 

{ after(grammarAccess.getClickAccess().getActionClickKeyword_0()); }
)

{ after(grammarAccess.getClickAccess().getActionClickKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IsCheck__ValAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsCheckAccess().getValBooleanEnumRuleCall_1_0()); }
	ruleBoolean{ after(grammarAccess.getIsCheckAccess().getValBooleanEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Clear__ActionAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClearAccess().getActionClearKeyword_0()); }
(
{ before(grammarAccess.getClearAccess().getActionClearKeyword_0()); }

	'.clear()' 

{ after(grammarAccess.getClearAccess().getActionClearKeyword_0()); }
)

{ after(grammarAccess.getClearAccess().getActionClearKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CheckValue__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheckValueAccess().getValueAlternatives_1_0()); }
(rule__CheckValue__ValueAlternatives_1_0)
{ after(grammarAccess.getCheckValueAccess().getValueAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Fill__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFillAccess().getValueAlternatives_1_0()); }
(rule__Fill__ValueAlternatives_1_0)
{ after(grammarAccess.getFillAccess().getValueAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntValue__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntValueAccess().getValueINTTerminalRuleCall_0()); }
	RULE_INT{ after(grammarAccess.getIntValueAccess().getValueINTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringValue__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringValueAccess().getValueSTRINGTerminalRuleCall_0()); }
	RULE_STRING{ after(grammarAccess.getStringValueAccess().getValueSTRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanValue__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanValueAccess().getValueBooleanEnumRuleCall_0()); }
	ruleBoolean{ after(grammarAccess.getBooleanValueAccess().getValueBooleanEnumRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_URL : ('a'..'z')+ '://' (('0'..'9')+ '.' ('0'..'9')+ '.' ('0'..'9')+ '.' ('0'..'9')+|('a'..'z'|'A'..'Z') ('a'..'z'|'A'..'Z'|'0'..'9'|'$'|'-'|'_'|'\\' ('0'..'9'|'a'..'f'|'A'..'F') ('0'..'9'|'a'..'f'|'A'..'F')|'%' '0'..'9' '0'..'9')* ('.' ('a'..'z'|'A'..'Z') ('a'..'z'|'A'..'Z'|'0'..'9'|'$'|'-'|'_'|'\\' ('0'..'9'|'a'..'f'|'A'..'F') ('0'..'9'|'a'..'f'|'A'..'F')|'%' '0'..'9' '0'..'9')*)*) (':' ('0'..'9')+)? ('/' ('a'..'z'|'A'..'Z'|'0'..'9'|'$'|'-'|'_'|'~'|'+'|'.'|'\\' ('0'..'9'|'a'..'f'|'A'..'F') ('0'..'9'|'a'..'f'|'A'..'F')|'%' '0'..'9' '0'..'9')*)* ('?' ('a'..'z'|'A'..'Z'|'0'..'9'|'$'|'-'|'_'|'='|'&'|';'|'\\' ('0'..'9'|'a'..'f'|'A'..'F') ('0'..'9'|'a'..'f'|'A'..'F')|'%' '0'..'9' '0'..'9')+ ('+' ('a'..'z'|'A'..'Z'|'0'..'9'|'$'|'-'|'_'|'='|'&'|';'|'\\' ('0'..'9'|'a'..'f'|'A'..'F') ('0'..'9'|'a'..'f'|'A'..'F')|'%' '0'..'9' '0'..'9')+)*)?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


