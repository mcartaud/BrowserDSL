/*
* generated by Xtext
*/
grammar InternalBrowserDSL;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.xtext.mda.project.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.mda.project.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.xtext.mda.project.services.BrowserDSLGrammarAccess;

}

@parser::members {
 
 	private BrowserDSLGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(BrowserDSLGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleProgram
entryRuleProgram 
:
{ before(grammarAccess.getProgramRule()); }
	 ruleProgram
{ after(grammarAccess.getProgramRule()); } 
	 EOF 
;

// Rule Program
ruleProgram
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProgramAccess().getGroup()); }
(rule__Program__Group__0)
{ after(grammarAccess.getProgramAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSubroutine
entryRuleSubroutine 
:
{ before(grammarAccess.getSubroutineRule()); }
	 ruleSubroutine
{ after(grammarAccess.getSubroutineRule()); } 
	 EOF 
;

// Rule Subroutine
ruleSubroutine
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSubroutineAccess().getGroup()); }
(rule__Subroutine__Group__0)
{ after(grammarAccess.getSubroutineAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleHead
entryRuleHead 
:
{ before(grammarAccess.getHeadRule()); }
	 ruleHead
{ after(grammarAccess.getHeadRule()); } 
	 EOF 
;

// Rule Head
ruleHead
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getHeadAccess().getAlternatives()); }
(rule__Head__Alternatives)
{ after(grammarAccess.getHeadAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionReference
entryRuleFunctionReference 
:
{ before(grammarAccess.getFunctionReferenceRule()); }
	 ruleFunctionReference
{ after(grammarAccess.getFunctionReferenceRule()); } 
	 EOF 
;

// Rule FunctionReference
ruleFunctionReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionReferenceAccess().getFunctionNameAssignment()); }
(rule__FunctionReference__FunctionNameAssignment)
{ after(grammarAccess.getFunctionReferenceAccess().getFunctionNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableReference
entryRuleVariableReference 
:
{ before(grammarAccess.getVariableReferenceRule()); }
	 ruleVariableReference
{ after(grammarAccess.getVariableReferenceRule()); } 
	 EOF 
;

// Rule VariableReference
ruleVariableReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableReferenceAccess().getVarIDAssignment()); }
(rule__VariableReference__VarIDAssignment)
{ after(grammarAccess.getVariableReferenceAccess().getVarIDAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionCall
entryRuleFunctionCall 
:
{ before(grammarAccess.getFunctionCallRule()); }
	 ruleFunctionCall
{ after(grammarAccess.getFunctionCallRule()); } 
	 EOF 
;

// Rule FunctionCall
ruleFunctionCall
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionCallAccess().getAlternatives()); }
(rule__FunctionCall__Alternatives)
{ after(grammarAccess.getFunctionCallAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionName
entryRuleFunctionName 
:
{ before(grammarAccess.getFunctionNameRule()); }
	 ruleFunctionName
{ after(grammarAccess.getFunctionNameRule()); } 
	 EOF 
;

// Rule FunctionName
ruleFunctionName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionNameAccess().getNameAssignment()); }
(rule__FunctionName__NameAssignment)
{ after(grammarAccess.getFunctionNameAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMain
entryRuleMain 
:
{ before(grammarAccess.getMainRule()); }
	 ruleMain
{ after(grammarAccess.getMainRule()); } 
	 EOF 
;

// Rule Main
ruleMain
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMainAccess().getGroup()); }
(rule__Main__Group__0)
{ after(grammarAccess.getMainAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBody
entryRuleBody 
:
{ before(grammarAccess.getBodyRule()); }
	 ruleBody
{ after(grammarAccess.getBodyRule()); } 
	 EOF 
;

// Rule Body
ruleBody
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBodyAccess().getGroup()); }
(rule__Body__Group__0)
{ after(grammarAccess.getBodyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInstruction
entryRuleInstruction 
:
{ before(grammarAccess.getInstructionRule()); }
	 ruleInstruction
{ after(grammarAccess.getInstructionRule()); } 
	 EOF 
;

// Rule Instruction
ruleInstruction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInstructionAccess().getAlternatives()); }
(rule__Instruction__Alternatives)
{ after(grammarAccess.getInstructionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCondition
entryRuleCondition 
:
{ before(grammarAccess.getConditionRule()); }
	 ruleCondition
{ after(grammarAccess.getConditionRule()); } 
	 EOF 
;

// Rule Condition
ruleCondition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConditionAccess().getGroup()); }
(rule__Condition__Group__0)
{ after(grammarAccess.getConditionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWhile
entryRuleWhile 
:
{ before(grammarAccess.getWhileRule()); }
	 ruleWhile
{ after(grammarAccess.getWhileRule()); } 
	 EOF 
;

// Rule While
ruleWhile
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWhileAccess().getGroup()); }
(rule__While__Group__0)
{ after(grammarAccess.getWhileAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleActionInstruction
entryRuleActionInstruction 
:
{ before(grammarAccess.getActionInstructionRule()); }
	 ruleActionInstruction
{ after(grammarAccess.getActionInstructionRule()); } 
	 EOF 
;

// Rule ActionInstruction
ruleActionInstruction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActionInstructionAccess().getAlternatives()); }
(rule__ActionInstruction__Alternatives)
{ after(grammarAccess.getActionInstructionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableName
entryRuleVariableName 
:
{ before(grammarAccess.getVariableNameRule()); }
	 ruleVariableName
{ after(grammarAccess.getVariableNameRule()); } 
	 EOF 
;

// Rule VariableName
ruleVariableName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableNameAccess().getNameAssignment()); }
(rule__VariableName__NameAssignment)
{ after(grammarAccess.getVariableNameAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDeclaration
entryRuleDeclaration 
:
{ before(grammarAccess.getDeclarationRule()); }
	 ruleDeclaration
{ after(grammarAccess.getDeclarationRule()); } 
	 EOF 
;

// Rule Declaration
ruleDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDeclarationAccess().getGroup()); }
(rule__Declaration__Group__0)
{ after(grammarAccess.getDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssignation
entryRuleAssignation 
:
{ before(grammarAccess.getAssignationRule()); }
	 ruleAssignation
{ after(grammarAccess.getAssignationRule()); } 
	 EOF 
;

// Rule Assignation
ruleAssignation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssignationAccess().getGroup()); }
(rule__Assignation__Group__0)
{ after(grammarAccess.getAssignationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression
entryRuleExpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getAlternatives()); }
(rule__Expression__Alternatives)
{ after(grammarAccess.getExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleType
entryRuleType 
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeAccess().getAlternatives()); }
(rule__Type__Alternatives)
{ after(grammarAccess.getTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariable
entryRuleVariable 
:
{ before(grammarAccess.getVariableRule()); }
	 ruleVariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule Variable
ruleVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableAccess().getVarAssignment()); }
(rule__Variable__VarAssignment)
{ after(grammarAccess.getVariableAccess().getVarAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleActionExpression
entryRuleActionExpression 
:
{ before(grammarAccess.getActionExpressionRule()); }
	 ruleActionExpression
{ after(grammarAccess.getActionExpressionRule()); } 
	 EOF 
;

// Rule ActionExpression
ruleActionExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActionExpressionAccess().getAlternatives()); }
(rule__ActionExpression__Alternatives)
{ after(grammarAccess.getActionExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleElement
entryRuleElement 
:
{ before(grammarAccess.getElementRule()); }
	 ruleElement
{ after(grammarAccess.getElementRule()); } 
	 EOF 
;

// Rule Element
ruleElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getElementAccess().getAlternatives()); }
(rule__Element__Alternatives)
{ after(grammarAccess.getElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClickableElement
entryRuleClickableElement 
:
{ before(grammarAccess.getClickableElementRule()); }
	 ruleClickableElement
{ after(grammarAccess.getClickableElementRule()); } 
	 EOF 
;

// Rule ClickableElement
ruleClickableElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClickableElementAccess().getAlternatives()); }
(rule__ClickableElement__Alternatives)
{ after(grammarAccess.getClickableElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFillableElement
entryRuleFillableElement 
:
{ before(grammarAccess.getFillableElementRule()); }
	 ruleFillableElement
{ after(grammarAccess.getFillableElementRule()); } 
	 EOF 
;

// Rule FillableElement
ruleFillableElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFillableElementAccess().getTextFieldParserRuleCall()); }
	ruleTextField
{ after(grammarAccess.getFillableElementAccess().getTextFieldParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCheckableElement
entryRuleCheckableElement 
:
{ before(grammarAccess.getCheckableElementRule()); }
	 ruleCheckableElement
{ after(grammarAccess.getCheckableElementRule()); } 
	 EOF 
;

// Rule CheckableElement
ruleCheckableElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCheckableElementAccess().getCheckboxParserRuleCall()); }
	ruleCheckbox
{ after(grammarAccess.getCheckableElementAccess().getCheckboxParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCheckbox
entryRuleCheckbox 
:
{ before(grammarAccess.getCheckboxRule()); }
	 ruleCheckbox
{ after(grammarAccess.getCheckboxRule()); } 
	 EOF 
;

// Rule Checkbox
ruleCheckbox
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCheckboxAccess().getGroup()); }
(rule__Checkbox__Group__0)
{ after(grammarAccess.getCheckboxAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLink
entryRuleLink 
:
{ before(grammarAccess.getLinkRule()); }
	 ruleLink
{ after(grammarAccess.getLinkRule()); } 
	 EOF 
;

// Rule Link
ruleLink
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLinkAccess().getGroup()); }
(rule__Link__Group__0)
{ after(grammarAccess.getLinkAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleButton
entryRuleButton 
:
{ before(grammarAccess.getButtonRule()); }
	 ruleButton
{ after(grammarAccess.getButtonRule()); } 
	 EOF 
;

// Rule Button
ruleButton
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getButtonAccess().getGroup()); }
(rule__Button__Group__0)
{ after(grammarAccess.getButtonAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImage
entryRuleImage 
:
{ before(grammarAccess.getImageRule()); }
	 ruleImage
{ after(grammarAccess.getImageRule()); } 
	 EOF 
;

// Rule Image
ruleImage
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImageAccess().getGroup()); }
(rule__Image__Group__0)
{ after(grammarAccess.getImageAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTextField
entryRuleTextField 
:
{ before(grammarAccess.getTextFieldRule()); }
	 ruleTextField
{ after(grammarAccess.getTextFieldRule()); } 
	 EOF 
;

// Rule TextField
ruleTextField
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTextFieldAccess().getGroup()); }
(rule__TextField__Group__0)
{ after(grammarAccess.getTextFieldAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeElement
entryRuleTypeElement 
:
{ before(grammarAccess.getTypeElementRule()); }
	 ruleTypeElement
{ after(grammarAccess.getTypeElementRule()); } 
	 EOF 
;

// Rule TypeElement
ruleTypeElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeElementAccess().getElemAssignment()); }
(rule__TypeElement__ElemAssignment)
{ after(grammarAccess.getTypeElementAccess().getElemAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSelect
entryRuleSelect 
:
{ before(grammarAccess.getSelectRule()); }
	 ruleSelect
{ after(grammarAccess.getSelectRule()); } 
	 EOF 
;

// Rule Select
ruleSelect
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSelectAccess().getGroup()); }
(rule__Select__Group__0)
{ after(grammarAccess.getSelectAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClick
entryRuleClick 
:
{ before(grammarAccess.getClickRule()); }
	 ruleClick
{ after(grammarAccess.getClickRule()); } 
	 EOF 
;

// Rule Click
ruleClick
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClickAccess().getGroup()); }
(rule__Click__Group__0)
{ after(grammarAccess.getClickAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCheck
entryRuleCheck 
:
{ before(grammarAccess.getCheckRule()); }
	 ruleCheck
{ after(grammarAccess.getCheckRule()); } 
	 EOF 
;

// Rule Check
ruleCheck
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCheckAccess().getGroup()); }
(rule__Check__Group__0)
{ after(grammarAccess.getCheckAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFill
entryRuleFill 
:
{ before(grammarAccess.getFillRule()); }
	 ruleFill
{ after(grammarAccess.getFillRule()); } 
	 EOF 
;

// Rule Fill
ruleFill
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFillAccess().getGroup()); }
(rule__Fill__Group__0)
{ after(grammarAccess.getFillAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClear
entryRuleClear 
:
{ before(grammarAccess.getClearRule()); }
	 ruleClear
{ after(grammarAccess.getClearRule()); } 
	 EOF 
;

// Rule Clear
ruleClear
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClearAccess().getGroup()); }
(rule__Clear__Group__0)
{ after(grammarAccess.getClearAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVerify
entryRuleVerify 
:
{ before(grammarAccess.getVerifyRule()); }
	 ruleVerify
{ after(grammarAccess.getVerifyRule()); } 
	 EOF 
;

// Rule Verify
ruleVerify
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVerifyAccess().getGroup()); }
(rule__Verify__Group__0)
{ after(grammarAccess.getVerifyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExist
entryRuleExist 
:
{ before(grammarAccess.getExistRule()); }
	 ruleExist
{ after(grammarAccess.getExistRule()); } 
	 EOF 
;

// Rule Exist
ruleExist
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExistAccess().getGroup()); }
(rule__Exist__Group__0)
{ after(grammarAccess.getExistAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGoTo
entryRuleGoTo 
:
{ before(grammarAccess.getGoToRule()); }
	 ruleGoTo
{ after(grammarAccess.getGoToRule()); } 
	 EOF 
;

// Rule GoTo
ruleGoTo
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGoToAccess().getGroup()); }
(rule__GoTo__Group__0)
{ after(grammarAccess.getGoToAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule OpenBrowser
ruleOpenBrowser
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpenBrowserAccess().getAlternatives()); }
(rule__OpenBrowser__Alternatives)
{ after(grammarAccess.getOpenBrowserAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Head__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeadAccess().getGroup_0()); }
(rule__Head__Group_0__0)
{ after(grammarAccess.getHeadAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getHeadAccess().getGroup_1()); }
(rule__Head__Group_1__0)
{ after(grammarAccess.getHeadAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getGroup_0()); }
(rule__FunctionCall__Group_0__0)
{ after(grammarAccess.getFunctionCallAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getFunctionCallAccess().getGroup_1()); }
(rule__FunctionCall__Group_1__0)
{ after(grammarAccess.getFunctionCallAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstructionAccess().getDecAssignment_0()); }
(rule__Instruction__DecAssignment_0)
{ after(grammarAccess.getInstructionAccess().getDecAssignment_0()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getCondAssignment_1()); }
(rule__Instruction__CondAssignment_1)
{ after(grammarAccess.getInstructionAccess().getCondAssignment_1()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getWhileAssignment_2()); }
(rule__Instruction__WhileAssignment_2)
{ after(grammarAccess.getInstructionAccess().getWhileAssignment_2()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getActAssignment_3()); }
(rule__Instruction__ActAssignment_3)
{ after(grammarAccess.getInstructionAccess().getActAssignment_3()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getAssAssignment_4()); }
(rule__Instruction__AssAssignment_4)
{ after(grammarAccess.getInstructionAccess().getAssAssignment_4()); }
)

    |(
{ before(grammarAccess.getInstructionAccess().getSubAssignment_5()); }
(rule__Instruction__SubAssignment_5)
{ after(grammarAccess.getInstructionAccess().getSubAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionAccess().getAllKeyword_1_0()); }

	'all ' 

{ after(grammarAccess.getConditionAccess().getAllKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getConditionAccess().getAnyKeyword_1_1()); }

	'any ' 

{ after(grammarAccess.getConditionAccess().getAnyKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActionInstruction__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionInstructionAccess().getActionAssignment_0()); }
(rule__ActionInstruction__ActionAssignment_0)
{ after(grammarAccess.getActionInstructionAccess().getActionAssignment_0()); }
)

    |(
{ before(grammarAccess.getActionInstructionAccess().getActionAssignment_1()); }
(rule__ActionInstruction__ActionAssignment_1)
{ after(grammarAccess.getActionInstructionAccess().getActionAssignment_1()); }
)

    |(
{ before(grammarAccess.getActionInstructionAccess().getActionAssignment_2()); }
(rule__ActionInstruction__ActionAssignment_2)
{ after(grammarAccess.getActionInstructionAccess().getActionAssignment_2()); }
)

    |(
{ before(grammarAccess.getActionInstructionAccess().getActionAssignment_3()); }
(rule__ActionInstruction__ActionAssignment_3)
{ after(grammarAccess.getActionInstructionAccess().getActionAssignment_3()); }
)

    |(
{ before(grammarAccess.getActionInstructionAccess().getGoToParserRuleCall_4()); }
	ruleGoTo
{ after(grammarAccess.getActionInstructionAccess().getGoToParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getTypeAssignment_0()); }
(rule__Expression__TypeAssignment_0)
{ after(grammarAccess.getExpressionAccess().getTypeAssignment_0()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getVarAssignment_1()); }
(rule__Expression__VarAssignment_1)
{ after(grammarAccess.getExpressionAccess().getVarAssignment_1()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getActAssignment_2()); }
(rule__Expression__ActAssignment_2)
{ after(grammarAccess.getExpressionAccess().getActAssignment_2()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getGroup_3()); }
(rule__Expression__Group_3__0)
{ after(grammarAccess.getExpressionAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getGroup_4()); }
(rule__Expression__Group_4__0)
{ after(grammarAccess.getExpressionAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getSpaceEqualsSignEqualsSignSpaceKeyword_3_0_0()); }

	' == ' 

{ after(grammarAccess.getExpressionAccess().getSpaceEqualsSignEqualsSignSpaceKeyword_3_0_0()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getSpaceGreaterThanSignSpaceKeyword_3_0_1()); }

	' > ' 

{ after(grammarAccess.getExpressionAccess().getSpaceGreaterThanSignSpaceKeyword_3_0_1()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getSpaceLessThanSignSpaceKeyword_3_0_2()); }

	' < ' 

{ after(grammarAccess.getExpressionAccess().getSpaceLessThanSignSpaceKeyword_3_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getBoolKeyword_0()); }

	'bool ' 

{ after(grammarAccess.getTypeAccess().getBoolKeyword_0()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getStringKeyword_1()); }

	'string ' 

{ after(grammarAccess.getTypeAccess().getStringKeyword_1()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getIntKeyword_2()); }

	'int ' 

{ after(grammarAccess.getTypeAccess().getIntKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActionExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionExpressionAccess().getExprAssignment_0()); }
(rule__ActionExpression__ExprAssignment_0)
{ after(grammarAccess.getActionExpressionAccess().getExprAssignment_0()); }
)

    |(
{ before(grammarAccess.getActionExpressionAccess().getExprAssignment_1()); }
(rule__ActionExpression__ExprAssignment_1)
{ after(grammarAccess.getActionExpressionAccess().getExprAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementAccess().getClickableElementParserRuleCall_0()); }
	ruleClickableElement
{ after(grammarAccess.getElementAccess().getClickableElementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getElementAccess().getFillableElementParserRuleCall_1()); }
	ruleFillableElement
{ after(grammarAccess.getElementAccess().getFillableElementParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getElementAccess().getCheckableElementParserRuleCall_2()); }
	ruleCheckableElement
{ after(grammarAccess.getElementAccess().getCheckableElementParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClickableElement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClickableElementAccess().getLinkParserRuleCall_0()); }
	ruleLink
{ after(grammarAccess.getClickableElementAccess().getLinkParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getClickableElementAccess().getButtonParserRuleCall_1()); }
	ruleButton
{ after(grammarAccess.getClickableElementAccess().getButtonParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getClickableElementAccess().getImageParserRuleCall_2()); }
	ruleImage
{ after(grammarAccess.getClickableElementAccess().getImageParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Checkbox__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheckboxAccess().getCheckAssignment_1_0()); }
(rule__Checkbox__CheckAssignment_1_0)
{ after(grammarAccess.getCheckboxAccess().getCheckAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getCheckboxAccess().getVariableParserRuleCall_1_1()); }
	ruleVariable
{ after(grammarAccess.getCheckboxAccess().getVariableParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkAccess().getLinkAssignment_1_0()); }
(rule__Link__LinkAssignment_1_0)
{ after(grammarAccess.getLinkAccess().getLinkAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getLinkAccess().getVariableParserRuleCall_1_1()); }
	ruleVariable
{ after(grammarAccess.getLinkAccess().getVariableParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getButtonAccess().getButAssignment_1_0()); }
(rule__Button__ButAssignment_1_0)
{ after(grammarAccess.getButtonAccess().getButAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getButtonAccess().getVariableParserRuleCall_1_1()); }
	ruleVariable
{ after(grammarAccess.getButtonAccess().getVariableParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Image__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImageAccess().getImgAssignment_1_0()); }
(rule__Image__ImgAssignment_1_0)
{ after(grammarAccess.getImageAccess().getImgAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getImageAccess().getVariableParserRuleCall_1_1()); }
	ruleVariable
{ after(grammarAccess.getImageAccess().getVariableParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TextField__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextFieldAccess().getTextAssignment_1_0()); }
(rule__TextField__TextAssignment_1_0)
{ after(grammarAccess.getTextFieldAccess().getTextAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getTextFieldAccess().getVariableParserRuleCall_1_1()); }
	ruleVariable
{ after(grammarAccess.getTextFieldAccess().getVariableParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeElement__ElemAlternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeElementAccess().getElemCheckboxKeyword_0_0()); }

	'checkbox' 

{ after(grammarAccess.getTypeElementAccess().getElemCheckboxKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getTypeElementAccess().getElemLinkKeyword_0_1()); }

	'link' 

{ after(grammarAccess.getTypeElementAccess().getElemLinkKeyword_0_1()); }
)

    |(
{ before(grammarAccess.getTypeElementAccess().getElemButtonKeyword_0_2()); }

	'button' 

{ after(grammarAccess.getTypeElementAccess().getElemButtonKeyword_0_2()); }
)

    |(
{ before(grammarAccess.getTypeElementAccess().getElemImageKeyword_0_3()); }

	'image' 

{ after(grammarAccess.getTypeElementAccess().getElemImageKeyword_0_3()); }
)

    |(
{ before(grammarAccess.getTypeElementAccess().getElemTextFieldKeyword_0_4()); }

	'textField' 

{ after(grammarAccess.getTypeElementAccess().getElemTextFieldKeyword_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Click__ValAlternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClickAccess().getValClickableElementParserRuleCall_1_0_0()); }
	ruleClickableElement
{ after(grammarAccess.getClickAccess().getValClickableElementParserRuleCall_1_0_0()); }
)

    |(
{ before(grammarAccess.getClickAccess().getValSelectParserRuleCall_1_0_1()); }
	ruleSelect
{ after(grammarAccess.getClickAccess().getValSelectParserRuleCall_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Check__ValAlternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheckAccess().getValCheckableElementParserRuleCall_1_0_0()); }
	ruleCheckableElement
{ after(grammarAccess.getCheckAccess().getValCheckableElementParserRuleCall_1_0_0()); }
)

    |(
{ before(grammarAccess.getCheckAccess().getValSelectParserRuleCall_1_0_1()); }
	ruleSelect
{ after(grammarAccess.getCheckAccess().getValSelectParserRuleCall_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Fill__ValAlternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFillAccess().getValFillableElementParserRuleCall_1_0_0()); }
	ruleFillableElement
{ after(grammarAccess.getFillAccess().getValFillableElementParserRuleCall_1_0_0()); }
)

    |(
{ before(grammarAccess.getFillAccess().getValSelectParserRuleCall_1_0_1()); }
	ruleSelect
{ after(grammarAccess.getFillAccess().getValSelectParserRuleCall_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Clear__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClearAccess().getFillableElementParserRuleCall_1_0()); }
	ruleFillableElement
{ after(grammarAccess.getClearAccess().getFillableElementParserRuleCall_1_0()); }
)

    |(
{ before(grammarAccess.getClearAccess().getCheckableElementParserRuleCall_1_1()); }
	ruleCheckableElement
{ after(grammarAccess.getClearAccess().getCheckableElementParserRuleCall_1_1()); }
)

    |(
{ before(grammarAccess.getClearAccess().getSelectParserRuleCall_1_2()); }
	ruleSelect
{ after(grammarAccess.getClearAccess().getSelectParserRuleCall_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Verify__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerifyAccess().getFillableElementParserRuleCall_1_0()); }
	ruleFillableElement
{ after(grammarAccess.getVerifyAccess().getFillableElementParserRuleCall_1_0()); }
)

    |(
{ before(grammarAccess.getVerifyAccess().getCheckableElementParserRuleCall_1_1()); }
	ruleCheckableElement
{ after(grammarAccess.getVerifyAccess().getCheckableElementParserRuleCall_1_1()); }
)

    |(
{ before(grammarAccess.getVerifyAccess().getSelectParserRuleCall_1_2()); }
	ruleSelect
{ after(grammarAccess.getVerifyAccess().getSelectParserRuleCall_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Exist__ValAlternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistAccess().getValElementParserRuleCall_1_0_0()); }
	ruleElement
{ after(grammarAccess.getExistAccess().getValElementParserRuleCall_1_0_0()); }
)

    |(
{ before(grammarAccess.getExistAccess().getValSelectParserRuleCall_1_0_1()); }
	ruleSelect
{ after(grammarAccess.getExistAccess().getValSelectParserRuleCall_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpenBrowser__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpenBrowserAccess().getChromeEnumLiteralDeclaration_0()); }
(	'Chrome' 
)
{ after(grammarAccess.getOpenBrowserAccess().getChromeEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getOpenBrowserAccess().getFirefoxEnumLiteralDeclaration_1()); }
(	'Firefox' 
)
{ after(grammarAccess.getOpenBrowserAccess().getFirefoxEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getOpenBrowserAccess().getHtmlUnitDriverEnumLiteralDeclaration_2()); }
(	'HtmlUnitDriver' 
)
{ after(grammarAccess.getOpenBrowserAccess().getHtmlUnitDriverEnumLiteralDeclaration_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Program__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group__0__Impl
	rule__Program__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getSubAssignment_0()); }
(rule__Program__SubAssignment_0)*
{ after(grammarAccess.getProgramAccess().getSubAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getMainAssignment_1()); }
(rule__Program__MainAssignment_1)
{ after(grammarAccess.getProgramAccess().getMainAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Subroutine__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Subroutine__Group__0__Impl
	rule__Subroutine__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Subroutine__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubroutineAccess().getSubKeyword_0()); }

	'sub ' 

{ after(grammarAccess.getSubroutineAccess().getSubKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Subroutine__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Subroutine__Group__1__Impl
	rule__Subroutine__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Subroutine__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubroutineAccess().getHeadAssignment_1()); }
(rule__Subroutine__HeadAssignment_1)
{ after(grammarAccess.getSubroutineAccess().getHeadAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Subroutine__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Subroutine__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Subroutine__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubroutineAccess().getBodyAssignment_2()); }
(rule__Subroutine__BodyAssignment_2)
{ after(grammarAccess.getSubroutineAccess().getBodyAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Head__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Head__Group_0__0__Impl
	rule__Head__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Head__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeadAccess().getNameAssignment_0_0()); }
(rule__Head__NameAssignment_0_0)
{ after(grammarAccess.getHeadAccess().getNameAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Head__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Head__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Head__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeadAccess().getLeftParenthesisRightParenthesisKeyword_0_1()); }

	'()' 

{ after(grammarAccess.getHeadAccess().getLeftParenthesisRightParenthesisKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Head__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Head__Group_1__0__Impl
	rule__Head__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Head__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeadAccess().getNameAssignment_1_0()); }
(rule__Head__NameAssignment_1_0)
{ after(grammarAccess.getHeadAccess().getNameAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Head__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Head__Group_1__1__Impl
	rule__Head__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Head__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeadAccess().getVarKeyword_1_1()); }

	'(var ' 

{ after(grammarAccess.getHeadAccess().getVarKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Head__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Head__Group_1__2__Impl
	rule__Head__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Head__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeadAccess().getVarIdAssignment_1_2()); }
(rule__Head__VarIdAssignment_1_2)
{ after(grammarAccess.getHeadAccess().getVarIdAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Head__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Head__Group_1__3__Impl
	rule__Head__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Head__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeadAccess().getGroup_1_3()); }
(rule__Head__Group_1_3__0)*
{ after(grammarAccess.getHeadAccess().getGroup_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Head__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Head__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Head__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeadAccess().getRightParenthesisKeyword_1_4()); }

	')' 

{ after(grammarAccess.getHeadAccess().getRightParenthesisKeyword_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Head__Group_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Head__Group_1_3__0__Impl
	rule__Head__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Head__Group_1_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeadAccess().getVarKeyword_1_3_0()); }

	', var ' 

{ after(grammarAccess.getHeadAccess().getVarKeyword_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Head__Group_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Head__Group_1_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Head__Group_1_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeadAccess().getVarIdAssignment_1_3_1()); }
(rule__Head__VarIdAssignment_1_3_1)
{ after(grammarAccess.getHeadAccess().getVarIdAssignment_1_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionCall__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group_0__0__Impl
	rule__FunctionCall__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getFunctionReferenceParserRuleCall_0_0()); }
	ruleFunctionReference
{ after(grammarAccess.getFunctionCallAccess().getFunctionReferenceParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getLeftParenthesisRightParenthesisKeyword_0_1()); }

	'()' 

{ after(grammarAccess.getFunctionCallAccess().getLeftParenthesisRightParenthesisKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionCall__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group_1__0__Impl
	rule__FunctionCall__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getFunctionReferenceParserRuleCall_1_0()); }
	ruleFunctionReference
{ after(grammarAccess.getFunctionCallAccess().getFunctionReferenceParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group_1__1__Impl
	rule__FunctionCall__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getLeftParenthesisKeyword_1_1()); }

	'(' 

{ after(grammarAccess.getFunctionCallAccess().getLeftParenthesisKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group_1__2__Impl
	rule__FunctionCall__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getVarAssignment_1_2()); }
(rule__FunctionCall__VarAssignment_1_2)
{ after(grammarAccess.getFunctionCallAccess().getVarAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group_1__3__Impl
	rule__FunctionCall__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getGroup_1_3()); }
(rule__FunctionCall__Group_1_3__0)*
{ after(grammarAccess.getFunctionCallAccess().getGroup_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getRightParenthesisKeyword_1_4()); }

	')' 

{ after(grammarAccess.getFunctionCallAccess().getRightParenthesisKeyword_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__FunctionCall__Group_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group_1_3__0__Impl
	rule__FunctionCall__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_1_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getCommaKeyword_1_3_0()); }

	',' 

{ after(grammarAccess.getFunctionCallAccess().getCommaKeyword_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group_1_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_1_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getVarAssignment_1_3_1()); }
(rule__FunctionCall__VarAssignment_1_3_1)
{ after(grammarAccess.getFunctionCallAccess().getVarAssignment_1_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Main__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Main__Group__0__Impl
	rule__Main__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Main__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainAccess().getMainKeyword_0()); }

	'main' 

{ after(grammarAccess.getMainAccess().getMainKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Main__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Main__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Main__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainAccess().getBodyAssignment_1()); }
(rule__Main__BodyAssignment_1)
{ after(grammarAccess.getMainAccess().getBodyAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Body__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Body__Group__0__Impl
	rule__Body__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBodyAccess().getBrowserKeyword_0()); }

	'{ browser ' 

{ after(grammarAccess.getBodyAccess().getBrowserKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Body__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Body__Group__1__Impl
	rule__Body__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBodyAccess().getOpenAssignment_1()); }
(rule__Body__OpenAssignment_1)
{ after(grammarAccess.getBodyAccess().getOpenAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Body__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Body__Group__2__Impl
	rule__Body__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBodyAccess().getSemicolonSpaceKeyword_2()); }

	'; ' 

{ after(grammarAccess.getBodyAccess().getSemicolonSpaceKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Body__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Body__Group__3__Impl
	rule__Body__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBodyAccess().getInstructionsAssignment_3()); }
(rule__Body__InstructionsAssignment_3)
{ after(grammarAccess.getBodyAccess().getInstructionsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Body__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Body__Group__4__Impl
	rule__Body__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBodyAccess().getGroup_4()); }
(rule__Body__Group_4__0)*
{ after(grammarAccess.getBodyAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Body__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Body__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBodyAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getBodyAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Body__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Body__Group_4__0__Impl
	rule__Body__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBodyAccess().getSpaceKeyword_4_0()); }

	' ' 

{ after(grammarAccess.getBodyAccess().getSpaceKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Body__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Body__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBodyAccess().getInstructionsAssignment_4_1()); }
(rule__Body__InstructionsAssignment_4_1)
{ after(grammarAccess.getBodyAccess().getInstructionsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Condition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Condition__Group__0__Impl
	rule__Condition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionAccess().getIfKeyword_0()); }

	'if ' 

{ after(grammarAccess.getConditionAccess().getIfKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Condition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Condition__Group__1__Impl
	rule__Condition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionAccess().getAlternatives_1()); }
(rule__Condition__Alternatives_1)?
{ after(grammarAccess.getConditionAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Condition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Condition__Group__2__Impl
	rule__Condition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getConditionAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Condition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Condition__Group__3__Impl
	rule__Condition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionAccess().getExpAssignment_3()); }
(rule__Condition__ExpAssignment_3)
{ after(grammarAccess.getConditionAccess().getExpAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Condition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Condition__Group__4__Impl
	rule__Condition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getConditionAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Condition__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Condition__Group__5__Impl
	rule__Condition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionAccess().getThenKeyword_5()); }

	'then ' 

{ after(grammarAccess.getConditionAccess().getThenKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Condition__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Condition__Group__6__Impl
	rule__Condition__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getConditionAccess().getInsAssignment_6()); }
(rule__Condition__InsAssignment_6)
{ after(grammarAccess.getConditionAccess().getInsAssignment_6()); }
)
(
{ before(grammarAccess.getConditionAccess().getInsAssignment_6()); }
(rule__Condition__InsAssignment_6)*
{ after(grammarAccess.getConditionAccess().getInsAssignment_6()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Condition__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Condition__Group__7__Impl
	rule__Condition__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionAccess().getElseKeyword_7()); }

	'else ' 

{ after(grammarAccess.getConditionAccess().getElseKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Condition__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Condition__Group__8__Impl
	rule__Condition__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getConditionAccess().getIns2Assignment_8()); }
(rule__Condition__Ins2Assignment_8)
{ after(grammarAccess.getConditionAccess().getIns2Assignment_8()); }
)
(
{ before(grammarAccess.getConditionAccess().getIns2Assignment_8()); }
(rule__Condition__Ins2Assignment_8)*
{ after(grammarAccess.getConditionAccess().getIns2Assignment_8()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Condition__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Condition__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionAccess().getEndifKeyword_9()); }

	'endif' 

{ after(grammarAccess.getConditionAccess().getEndifKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__While__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__While__Group__0__Impl
	rule__While__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileAccess().getWhileKeyword_0()); }

	'while (' 

{ after(grammarAccess.getWhileAccess().getWhileKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__While__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__While__Group__1__Impl
	rule__While__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileAccess().getExpAssignment_1()); }
(rule__While__ExpAssignment_1)
{ after(grammarAccess.getWhileAccess().getExpAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__While__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__While__Group__2__Impl
	rule__While__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileAccess().getDoKeyword_2()); }

	') do ' 

{ after(grammarAccess.getWhileAccess().getDoKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__While__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__While__Group__3__Impl
	rule__While__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getWhileAccess().getInsAssignment_3()); }
(rule__While__InsAssignment_3)
{ after(grammarAccess.getWhileAccess().getInsAssignment_3()); }
)
(
{ before(grammarAccess.getWhileAccess().getInsAssignment_3()); }
(rule__While__InsAssignment_3)*
{ after(grammarAccess.getWhileAccess().getInsAssignment_3()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__While__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__While__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__While__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileAccess().getEndwhileKeyword_4()); }

	' endwhile' 

{ after(grammarAccess.getWhileAccess().getEndwhileKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Declaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group__0__Impl
	rule__Declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getVarKeyword_0()); }

	'var ' 

{ after(grammarAccess.getDeclarationAccess().getVarKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group__1__Impl
	rule__Declaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getNameAssignment_1()); }
(rule__Declaration__NameAssignment_1)
{ after(grammarAccess.getDeclarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group__2__Impl
	rule__Declaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getSpaceEqualsSignSpaceKeyword_2()); }

	' = ' 

{ after(grammarAccess.getDeclarationAccess().getSpaceEqualsSignSpaceKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group__3__Impl
	rule__Declaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getValAssignment_3()); }
(rule__Declaration__ValAssignment_3)
{ after(grammarAccess.getDeclarationAccess().getValAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getDeclarationAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Assignation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignation__Group__0__Impl
	rule__Assignation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignationAccess().getVarAssignment_0()); }
(rule__Assignation__VarAssignment_0)
{ after(grammarAccess.getAssignationAccess().getVarAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignation__Group__1__Impl
	rule__Assignation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignationAccess().getSpaceEqualsSignSpaceKeyword_1()); }

	' = ' 

{ after(grammarAccess.getAssignationAccess().getSpaceEqualsSignSpaceKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignation__Group__2__Impl
	rule__Assignation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignationAccess().getExprAssignment_2()); }
(rule__Assignation__ExprAssignment_2)
{ after(grammarAccess.getAssignationAccess().getExprAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignationAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getAssignationAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Expression__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_3__0__Impl
	rule__Expression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getAlternatives_3_0()); }
(rule__Expression__Alternatives_3_0)
{ after(grammarAccess.getExpressionAccess().getAlternatives_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_3__1__Impl
	rule__Expression__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getLeftAssignment_3_1()); }
(rule__Expression__LeftAssignment_3_1)
{ after(grammarAccess.getExpressionAccess().getLeftAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getRightAssignment_3_2()); }
(rule__Expression__RightAssignment_3_2)
{ after(grammarAccess.getExpressionAccess().getRightAssignment_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expression__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_4__0__Impl
	rule__Expression__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getSpaceExclamationMarkKeyword_4_0()); }

	' !' 

{ after(grammarAccess.getExpressionAccess().getSpaceExclamationMarkKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExpAssignment_4_1()); }
(rule__Expression__ExpAssignment_4_1)
{ after(grammarAccess.getExpressionAccess().getExpAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Checkbox__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Checkbox__Group__0__Impl
	rule__Checkbox__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Checkbox__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheckboxAccess().getCheckboxKeyword_0()); }

	'checkbox ' 

{ after(grammarAccess.getCheckboxAccess().getCheckboxKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Checkbox__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Checkbox__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Checkbox__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheckboxAccess().getAlternatives_1()); }
(rule__Checkbox__Alternatives_1)
{ after(grammarAccess.getCheckboxAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Link__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Link__Group__0__Impl
	rule__Link__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkAccess().getLinkKeyword_0()); }

	'link ' 

{ after(grammarAccess.getLinkAccess().getLinkKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Link__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Link__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkAccess().getAlternatives_1()); }
(rule__Link__Alternatives_1)
{ after(grammarAccess.getLinkAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Button__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Button__Group__0__Impl
	rule__Button__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getButtonAccess().getButtonKeyword_0()); }

	'button ' 

{ after(grammarAccess.getButtonAccess().getButtonKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Button__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Button__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getButtonAccess().getAlternatives_1()); }
(rule__Button__Alternatives_1)
{ after(grammarAccess.getButtonAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Image__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Image__Group__0__Impl
	rule__Image__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Image__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImageAccess().getImageKeyword_0()); }

	'image ' 

{ after(grammarAccess.getImageAccess().getImageKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Image__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Image__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Image__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImageAccess().getAlternatives_1()); }
(rule__Image__Alternatives_1)
{ after(grammarAccess.getImageAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TextField__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TextField__Group__0__Impl
	rule__TextField__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TextField__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextFieldAccess().getTextFieldKeyword_0()); }

	'textField ' 

{ after(grammarAccess.getTextFieldAccess().getTextFieldKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TextField__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TextField__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TextField__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextFieldAccess().getAlternatives_1()); }
(rule__TextField__Alternatives_1)
{ after(grammarAccess.getTextFieldAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Select__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Select__Group__0__Impl
	rule__Select__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectAccess().getSelectKeyword_0()); }

	'select(' 

{ after(grammarAccess.getSelectAccess().getSelectKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Select__Group__1__Impl
	rule__Select__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectAccess().getValueAssignment_1()); }
(rule__Select__ValueAssignment_1)
{ after(grammarAccess.getSelectAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Select__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getSelectAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Click__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Click__Group__0__Impl
	rule__Click__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Click__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClickAccess().getClickKeyword_0()); }

	'click(' 

{ after(grammarAccess.getClickAccess().getClickKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Click__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Click__Group__1__Impl
	rule__Click__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Click__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClickAccess().getValAssignment_1()); }
(rule__Click__ValAssignment_1)
{ after(grammarAccess.getClickAccess().getValAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Click__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Click__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Click__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClickAccess().getRightParenthesisSemicolonKeyword_2()); }

	');' 

{ after(grammarAccess.getClickAccess().getRightParenthesisSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Check__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Check__Group__0__Impl
	rule__Check__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Check__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheckAccess().getCheckKeyword_0()); }

	'check(' 

{ after(grammarAccess.getCheckAccess().getCheckKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Check__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Check__Group__1__Impl
	rule__Check__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Check__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheckAccess().getValAssignment_1()); }
(rule__Check__ValAssignment_1)
{ after(grammarAccess.getCheckAccess().getValAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Check__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Check__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Check__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheckAccess().getRightParenthesisSemicolonKeyword_2()); }

	');' 

{ after(grammarAccess.getCheckAccess().getRightParenthesisSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Fill__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Fill__Group__0__Impl
	rule__Fill__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Fill__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFillAccess().getFillKeyword_0()); }

	'fill(' 

{ after(grammarAccess.getFillAccess().getFillKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Fill__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Fill__Group__1__Impl
	rule__Fill__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Fill__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFillAccess().getValAssignment_1()); }
(rule__Fill__ValAssignment_1)
{ after(grammarAccess.getFillAccess().getValAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Fill__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Fill__Group__2__Impl
	rule__Fill__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Fill__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFillAccess().getValueKeyword_2()); }

	', value=' 

{ after(grammarAccess.getFillAccess().getValueKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Fill__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Fill__Group__3__Impl
	rule__Fill__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Fill__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFillAccess().getSTRINGTerminalRuleCall_3()); }
	RULE_STRING
{ after(grammarAccess.getFillAccess().getSTRINGTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Fill__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Fill__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Fill__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFillAccess().getRightParenthesisSemicolonKeyword_4()); }

	');' 

{ after(grammarAccess.getFillAccess().getRightParenthesisSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Clear__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Clear__Group__0__Impl
	rule__Clear__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Clear__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClearAccess().getClearKeyword_0()); }

	'clear(' 

{ after(grammarAccess.getClearAccess().getClearKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Clear__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Clear__Group__1__Impl
	rule__Clear__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Clear__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClearAccess().getAlternatives_1()); }
(rule__Clear__Alternatives_1)
{ after(grammarAccess.getClearAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Clear__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Clear__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Clear__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClearAccess().getRightParenthesisSemicolonKeyword_2()); }

	');' 

{ after(grammarAccess.getClearAccess().getRightParenthesisSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Verify__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Verify__Group__0__Impl
	rule__Verify__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Verify__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerifyAccess().getVerifyKeyword_0()); }

	'verify(' 

{ after(grammarAccess.getVerifyAccess().getVerifyKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Verify__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Verify__Group__1__Impl
	rule__Verify__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Verify__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerifyAccess().getAlternatives_1()); }
(rule__Verify__Alternatives_1)
{ after(grammarAccess.getVerifyAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Verify__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Verify__Group__2__Impl
	rule__Verify__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Verify__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerifyAccess().getValueKeyword_2()); }

	', value=' 

{ after(grammarAccess.getVerifyAccess().getValueKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Verify__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Verify__Group__3__Impl
	rule__Verify__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Verify__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerifyAccess().getSTRINGTerminalRuleCall_3()); }
	RULE_STRING
{ after(grammarAccess.getVerifyAccess().getSTRINGTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Verify__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Verify__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Verify__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerifyAccess().getRightParenthesisSemicolonKeyword_4()); }

	');' 

{ after(grammarAccess.getVerifyAccess().getRightParenthesisSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Exist__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exist__Group__0__Impl
	rule__Exist__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exist__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistAccess().getExistKeyword_0()); }

	'exist(' 

{ after(grammarAccess.getExistAccess().getExistKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exist__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exist__Group__1__Impl
	rule__Exist__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Exist__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistAccess().getValAssignment_1()); }
(rule__Exist__ValAssignment_1)
{ after(grammarAccess.getExistAccess().getValAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exist__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exist__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exist__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistAccess().getRightParenthesisSemicolonKeyword_2()); }

	');' 

{ after(grammarAccess.getExistAccess().getRightParenthesisSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__GoTo__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GoTo__Group__0__Impl
	rule__GoTo__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GoTo__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGoToAccess().getGoToKeyword_0()); }

	'goTo(' 

{ after(grammarAccess.getGoToAccess().getGoToKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GoTo__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GoTo__Group__1__Impl
	rule__GoTo__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GoTo__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGoToAccess().getUrlAssignment_1()); }
(rule__GoTo__UrlAssignment_1)
{ after(grammarAccess.getGoToAccess().getUrlAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GoTo__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GoTo__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GoTo__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGoToAccess().getRightParenthesisSemicolonKeyword_2()); }

	');' 

{ after(grammarAccess.getGoToAccess().getRightParenthesisSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__Program__SubAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getSubSubroutineParserRuleCall_0_0()); }
	ruleSubroutine{ after(grammarAccess.getProgramAccess().getSubSubroutineParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Program__MainAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getMainMainParserRuleCall_1_0()); }
	ruleMain{ after(grammarAccess.getProgramAccess().getMainMainParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Subroutine__HeadAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubroutineAccess().getHeadHeadParserRuleCall_1_0()); }
	ruleHead{ after(grammarAccess.getSubroutineAccess().getHeadHeadParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Subroutine__BodyAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubroutineAccess().getBodyBodyParserRuleCall_2_0()); }
	ruleBody{ after(grammarAccess.getSubroutineAccess().getBodyBodyParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Head__NameAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeadAccess().getNameFunctionNameParserRuleCall_0_0_0()); }
	ruleFunctionName{ after(grammarAccess.getHeadAccess().getNameFunctionNameParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Head__NameAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeadAccess().getNameFunctionNameParserRuleCall_1_0_0()); }
	ruleFunctionName{ after(grammarAccess.getHeadAccess().getNameFunctionNameParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Head__VarIdAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeadAccess().getVarIdVariableNameParserRuleCall_1_2_0()); }
	ruleVariableName{ after(grammarAccess.getHeadAccess().getVarIdVariableNameParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Head__VarIdAssignment_1_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeadAccess().getVarIdVariableNameParserRuleCall_1_3_1_0()); }
	ruleVariableName{ after(grammarAccess.getHeadAccess().getVarIdVariableNameParserRuleCall_1_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionReference__FunctionNameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionReferenceAccess().getFunctionNameFunctionNameCrossReference_0()); }
(
{ before(grammarAccess.getFunctionReferenceAccess().getFunctionNameFunctionNameIDTerminalRuleCall_0_1()); }
	RULE_ID{ after(grammarAccess.getFunctionReferenceAccess().getFunctionNameFunctionNameIDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getFunctionReferenceAccess().getFunctionNameFunctionNameCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableReference__VarIDAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableReferenceAccess().getVarIDVariableNameCrossReference_0()); }
(
{ before(grammarAccess.getVariableReferenceAccess().getVarIDVariableNameIDTerminalRuleCall_0_1()); }
	RULE_ID{ after(grammarAccess.getVariableReferenceAccess().getVarIDVariableNameIDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getVariableReferenceAccess().getVarIDVariableNameCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__VarAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getVarExpressionParserRuleCall_1_2_0()); }
	ruleExpression{ after(grammarAccess.getFunctionCallAccess().getVarExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__VarAssignment_1_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getVarExpressionParserRuleCall_1_3_1_0()); }
	ruleExpression{ after(grammarAccess.getFunctionCallAccess().getVarExpressionParserRuleCall_1_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionName__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionNameAccess().getNameSTRINGTerminalRuleCall_0()); }
	RULE_STRING{ after(grammarAccess.getFunctionNameAccess().getNameSTRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Main__BodyAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMainAccess().getBodyBodyParserRuleCall_1_0()); }
	ruleBody{ after(grammarAccess.getMainAccess().getBodyBodyParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Body__OpenAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBodyAccess().getOpenOpenBrowserEnumRuleCall_1_0()); }
	ruleOpenBrowser{ after(grammarAccess.getBodyAccess().getOpenOpenBrowserEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Body__InstructionsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBodyAccess().getInstructionsInstructionParserRuleCall_3_0()); }
	ruleInstruction{ after(grammarAccess.getBodyAccess().getInstructionsInstructionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Body__InstructionsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBodyAccess().getInstructionsInstructionParserRuleCall_4_1_0()); }
	ruleInstruction{ after(grammarAccess.getBodyAccess().getInstructionsInstructionParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__DecAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstructionAccess().getDecDeclarationParserRuleCall_0_0()); }
	ruleDeclaration{ after(grammarAccess.getInstructionAccess().getDecDeclarationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__CondAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstructionAccess().getCondConditionParserRuleCall_1_0()); }
	ruleCondition{ after(grammarAccess.getInstructionAccess().getCondConditionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__WhileAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstructionAccess().getWhileWhileParserRuleCall_2_0()); }
	ruleWhile{ after(grammarAccess.getInstructionAccess().getWhileWhileParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__ActAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstructionAccess().getActActionInstructionParserRuleCall_3_0()); }
	ruleActionInstruction{ after(grammarAccess.getInstructionAccess().getActActionInstructionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__AssAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstructionAccess().getAssAssignationParserRuleCall_4_0()); }
	ruleAssignation{ after(grammarAccess.getInstructionAccess().getAssAssignationParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__SubAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstructionAccess().getSubFunctionCallParserRuleCall_5_0()); }
	ruleFunctionCall{ after(grammarAccess.getInstructionAccess().getSubFunctionCallParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__ExpAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionAccess().getExpExpressionParserRuleCall_3_0()); }
	ruleExpression{ after(grammarAccess.getConditionAccess().getExpExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__InsAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionAccess().getInsInstructionParserRuleCall_6_0()); }
	ruleInstruction{ after(grammarAccess.getConditionAccess().getInsInstructionParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Ins2Assignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionAccess().getIns2InstructionParserRuleCall_8_0()); }
	ruleInstruction{ after(grammarAccess.getConditionAccess().getIns2InstructionParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__While__ExpAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileAccess().getExpExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getWhileAccess().getExpExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__While__InsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileAccess().getInsInstructionParserRuleCall_3_0()); }
	ruleInstruction{ after(grammarAccess.getWhileAccess().getInsInstructionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActionInstruction__ActionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionInstructionAccess().getActionClickParserRuleCall_0_0()); }
	ruleClick{ after(grammarAccess.getActionInstructionAccess().getActionClickParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActionInstruction__ActionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionInstructionAccess().getActionCheckParserRuleCall_1_0()); }
	ruleCheck{ after(grammarAccess.getActionInstructionAccess().getActionCheckParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActionInstruction__ActionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionInstructionAccess().getActionFillParserRuleCall_2_0()); }
	ruleFill{ after(grammarAccess.getActionInstructionAccess().getActionFillParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActionInstruction__ActionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionInstructionAccess().getActionClearParserRuleCall_3_0()); }
	ruleClear{ after(grammarAccess.getActionInstructionAccess().getActionClearParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableName__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableNameAccess().getNameSTRINGTerminalRuleCall_0()); }
	RULE_STRING{ after(grammarAccess.getVariableNameAccess().getNameSTRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getNameVariableNameParserRuleCall_1_0()); }
	ruleVariableName{ after(grammarAccess.getDeclarationAccess().getNameVariableNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__ValAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getValExpressionParserRuleCall_3_0()); }
	ruleExpression{ after(grammarAccess.getDeclarationAccess().getValExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignation__VarAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignationAccess().getVarVariableReferenceParserRuleCall_0_0()); }
	ruleVariableReference{ after(grammarAccess.getAssignationAccess().getVarVariableReferenceParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignation__ExprAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignationAccess().getExprExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getAssignationAccess().getExprExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getTypeTypeParserRuleCall_0_0()); }
	ruleType{ after(grammarAccess.getExpressionAccess().getTypeTypeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__VarAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getVarVariableParserRuleCall_1_0()); }
	ruleVariable{ after(grammarAccess.getExpressionAccess().getVarVariableParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ActAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getActActionExpressionParserRuleCall_2_0()); }
	ruleActionExpression{ after(grammarAccess.getExpressionAccess().getActActionExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__LeftAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getLeftExpressionParserRuleCall_3_1_0()); }
	ruleExpression{ after(grammarAccess.getExpressionAccess().getLeftExpressionParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__RightAssignment_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getRightExpressionParserRuleCall_3_2_0()); }
	ruleExpression{ after(grammarAccess.getExpressionAccess().getRightExpressionParserRuleCall_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ExpAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExpExpressionParserRuleCall_4_1_0()); }
	ruleExpression{ after(grammarAccess.getExpressionAccess().getExpExpressionParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__VarAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getVarVariableReferenceParserRuleCall_0()); }
	ruleVariableReference{ after(grammarAccess.getVariableAccess().getVarVariableReferenceParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActionExpression__ExprAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionExpressionAccess().getExprVerifyParserRuleCall_0_0()); }
	ruleVerify{ after(grammarAccess.getActionExpressionAccess().getExprVerifyParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActionExpression__ExprAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionExpressionAccess().getExprExistParserRuleCall_1_0()); }
	ruleExist{ after(grammarAccess.getActionExpressionAccess().getExprExistParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Checkbox__CheckAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheckboxAccess().getCheckSTRINGTerminalRuleCall_1_0_0()); }
	RULE_STRING{ after(grammarAccess.getCheckboxAccess().getCheckSTRINGTerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Link__LinkAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkAccess().getLinkSTRINGTerminalRuleCall_1_0_0()); }
	RULE_STRING{ after(grammarAccess.getLinkAccess().getLinkSTRINGTerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Button__ButAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getButtonAccess().getButSTRINGTerminalRuleCall_1_0_0()); }
	RULE_STRING{ after(grammarAccess.getButtonAccess().getButSTRINGTerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Image__ImgAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImageAccess().getImgSTRINGTerminalRuleCall_1_0_0()); }
	RULE_STRING{ after(grammarAccess.getImageAccess().getImgSTRINGTerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TextField__TextAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextFieldAccess().getTextSTRINGTerminalRuleCall_1_0_0()); }
	RULE_STRING{ after(grammarAccess.getTextFieldAccess().getTextSTRINGTerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeElement__ElemAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeElementAccess().getElemAlternatives_0()); }
(rule__TypeElement__ElemAlternatives_0)
{ after(grammarAccess.getTypeElementAccess().getElemAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Select__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectAccess().getValueTypeElementParserRuleCall_1_0()); }
	ruleTypeElement{ after(grammarAccess.getSelectAccess().getValueTypeElementParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Click__ValAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClickAccess().getValAlternatives_1_0()); }
(rule__Click__ValAlternatives_1_0)
{ after(grammarAccess.getClickAccess().getValAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Check__ValAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheckAccess().getValAlternatives_1_0()); }
(rule__Check__ValAlternatives_1_0)
{ after(grammarAccess.getCheckAccess().getValAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Fill__ValAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFillAccess().getValAlternatives_1_0()); }
(rule__Fill__ValAlternatives_1_0)
{ after(grammarAccess.getFillAccess().getValAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Exist__ValAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExistAccess().getValAlternatives_1_0()); }
(rule__Exist__ValAlternatives_1_0)
{ after(grammarAccess.getExistAccess().getValAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GoTo__UrlAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGoToAccess().getUrlURLTerminalRuleCall_1_0()); }
	RULE_URL{ after(grammarAccess.getGoToAccess().getUrlURLTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_URL : ('a'..'z')+ '://' (('0'..'9')+ '.' ('0'..'9')+ '.' ('0'..'9')+ '.' ('0'..'9')+|('a'..'z'|'A'..'Z') ('a'..'z'|'A'..'Z'|'0'..'9'|'$'|'-'|'_'|'\\' ('0'..'9'|'a'..'f'|'A'..'F') ('0'..'9'|'a'..'f'|'A'..'F')|'%' '0'..'9' '0'..'9')* ('.' ('a'..'z'|'A'..'Z') ('a'..'z'|'A'..'Z'|'0'..'9'|'$'|'-'|'_'|'\\' ('0'..'9'|'a'..'f'|'A'..'F') ('0'..'9'|'a'..'f'|'A'..'F')|'%' '0'..'9' '0'..'9')*)*) (':' ('0'..'9')+)? ('/' ('a'..'z'|'A'..'Z'|'0'..'9'|'$'|'-'|'_'|'~'|'+'|'.'|'\\' ('0'..'9'|'a'..'f'|'A'..'F') ('0'..'9'|'a'..'f'|'A'..'F')|'%' '0'..'9' '0'..'9')*)* ('?' ('a'..'z'|'A'..'Z'|'0'..'9'|'$'|'-'|'_'|'='|'&'|';'|'\\' ('0'..'9'|'a'..'f'|'A'..'F') ('0'..'9'|'a'..'f'|'A'..'F')|'%' '0'..'9' '0'..'9')+ ('+' ('a'..'z'|'A'..'Z'|'0'..'9'|'$'|'-'|'_'|'='|'&'|';'|'\\' ('0'..'9'|'a'..'f'|'A'..'F') ('0'..'9'|'a'..'f'|'A'..'F')|'%' '0'..'9' '0'..'9')+)*)?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


