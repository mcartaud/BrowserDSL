/*
* generated by Xtext
*/
package org.xtext.mda.project.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import org.xtext.mda.project.services.BrowserDSLGrammarAccess;

public class BrowserDSLParser extends AbstractContentAssistParser {
	
	@Inject
	private BrowserDSLGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected org.xtext.mda.project.ui.contentassist.antlr.internal.InternalBrowserDSLParser createParser() {
		org.xtext.mda.project.ui.contentassist.antlr.internal.InternalBrowserDSLParser result = new org.xtext.mda.project.ui.contentassist.antlr.internal.InternalBrowserDSLParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getHeadAccess().getAlternatives(), "rule__Head__Alternatives");
					put(grammarAccess.getFunctionCallAccess().getAlternatives(), "rule__FunctionCall__Alternatives");
					put(grammarAccess.getCallTypeAccess().getAlternatives(), "rule__CallType__Alternatives");
					put(grammarAccess.getInstructionAccess().getAlternatives(), "rule__Instruction__Alternatives");
					put(grammarAccess.getCheckboxAccess().getIdAlternatives_1_0(), "rule__Checkbox__IdAlternatives_1_0");
					put(grammarAccess.getLinkAccess().getIdAlternatives_1_0(), "rule__Link__IdAlternatives_1_0");
					put(grammarAccess.getButtonAccess().getIdAlternatives_1_0(), "rule__Button__IdAlternatives_1_0");
					put(grammarAccess.getImageAccess().getIdAlternatives_1_0(), "rule__Image__IdAlternatives_1_0");
					put(grammarAccess.getTextFieldAccess().getIdAlternatives_1_0(), "rule__TextField__IdAlternatives_1_0");
					put(grammarAccess.getCheckboxActionAccess().getAlternatives(), "rule__CheckboxAction__Alternatives");
					put(grammarAccess.getTextActionAccess().getAlternatives(), "rule__TextAction__Alternatives");
					put(grammarAccess.getCheckValueAccess().getValueAlternatives_1_0(), "rule__CheckValue__ValueAlternatives_1_0");
					put(grammarAccess.getFillAccess().getValueAlternatives_1_0(), "rule__Fill__ValueAlternatives_1_0");
					put(grammarAccess.getValuesAccess().getAlternatives(), "rule__Values__Alternatives");
					put(grammarAccess.getBooleanAccess().getAlternatives(), "rule__Boolean__Alternatives");
					put(grammarAccess.getOpenBrowserAccess().getAlternatives(), "rule__OpenBrowser__Alternatives");
					put(grammarAccess.getProgramAccess().getGroup(), "rule__Program__Group__0");
					put(grammarAccess.getSubroutineAccess().getGroup(), "rule__Subroutine__Group__0");
					put(grammarAccess.getSubBodyAccess().getGroup(), "rule__SubBody__Group__0");
					put(grammarAccess.getSubBodyAccess().getGroup_3(), "rule__SubBody__Group_3__0");
					put(grammarAccess.getHeadAccess().getGroup_0(), "rule__Head__Group_0__0");
					put(grammarAccess.getHeadAccess().getGroup_1(), "rule__Head__Group_1__0");
					put(grammarAccess.getHeadAccess().getGroup_1_3(), "rule__Head__Group_1_3__0");
					put(grammarAccess.getMainAccess().getGroup(), "rule__Main__Group__0");
					put(grammarAccess.getBodyAccess().getGroup(), "rule__Body__Group__0");
					put(grammarAccess.getBodyAccess().getGroup_5(), "rule__Body__Group_5__0");
					put(grammarAccess.getFunctionCallAccess().getGroup_0(), "rule__FunctionCall__Group_0__0");
					put(grammarAccess.getFunctionCallAccess().getGroup_1(), "rule__FunctionCall__Group_1__0");
					put(grammarAccess.getFunctionCallAccess().getGroup_1_3(), "rule__FunctionCall__Group_1_3__0");
					put(grammarAccess.getDeclarationAccess().getGroup(), "rule__Declaration__Group__0");
					put(grammarAccess.getGoToAccess().getGroup(), "rule__GoTo__Group__0");
					put(grammarAccess.getCheckboxAccess().getGroup(), "rule__Checkbox__Group__0");
					put(grammarAccess.getLinkAccess().getGroup(), "rule__Link__Group__0");
					put(grammarAccess.getButtonAccess().getGroup(), "rule__Button__Group__0");
					put(grammarAccess.getImageAccess().getGroup(), "rule__Image__Group__0");
					put(grammarAccess.getTextFieldAccess().getGroup(), "rule__TextField__Group__0");
					put(grammarAccess.getIsCheckAccess().getGroup(), "rule__IsCheck__Group__0");
					put(grammarAccess.getCheckValueAccess().getGroup(), "rule__CheckValue__Group__0");
					put(grammarAccess.getFillAccess().getGroup(), "rule__Fill__Group__0");
					put(grammarAccess.getProgramAccess().getBrowserAssignment_1(), "rule__Program__BrowserAssignment_1");
					put(grammarAccess.getProgramAccess().getVariablesAssignment_3(), "rule__Program__VariablesAssignment_3");
					put(grammarAccess.getProgramAccess().getSubroutinesAssignment_4(), "rule__Program__SubroutinesAssignment_4");
					put(grammarAccess.getProgramAccess().getMainAssignment_5(), "rule__Program__MainAssignment_5");
					put(grammarAccess.getSubroutineAccess().getHeadAssignment_1(), "rule__Subroutine__HeadAssignment_1");
					put(grammarAccess.getSubroutineAccess().getBodyAssignment_2(), "rule__Subroutine__BodyAssignment_2");
					put(grammarAccess.getSubBodyAccess().getInstructionsAssignment_1(), "rule__SubBody__InstructionsAssignment_1");
					put(grammarAccess.getSubBodyAccess().getInstructionsAssignment_3_0(), "rule__SubBody__InstructionsAssignment_3_0");
					put(grammarAccess.getHeadAccess().getNameAssignment_0_0(), "rule__Head__NameAssignment_0_0");
					put(grammarAccess.getHeadAccess().getNameAssignment_1_0(), "rule__Head__NameAssignment_1_0");
					put(grammarAccess.getHeadAccess().getNameParametersAssignment_1_2(), "rule__Head__NameParametersAssignment_1_2");
					put(grammarAccess.getHeadAccess().getNameParametersAssignment_1_3_1(), "rule__Head__NameParametersAssignment_1_3_1");
					put(grammarAccess.getFunctionNameAccess().getNameAssignment(), "rule__FunctionName__NameAssignment");
					put(grammarAccess.getMainAccess().getBodyAssignment_1(), "rule__Main__BodyAssignment_1");
					put(grammarAccess.getBodyAccess().getGoAssignment_1(), "rule__Body__GoAssignment_1");
					put(grammarAccess.getBodyAccess().getInstructionsAssignment_3(), "rule__Body__InstructionsAssignment_3");
					put(grammarAccess.getBodyAccess().getInstructionsAssignment_5_0(), "rule__Body__InstructionsAssignment_5_0");
					put(grammarAccess.getVariableReferenceAccess().getVarIDAssignment(), "rule__VariableReference__VarIDAssignment");
					put(grammarAccess.getFunctionReferenceAccess().getFunctionNameAssignment(), "rule__FunctionReference__FunctionNameAssignment");
					put(grammarAccess.getFunctionCallAccess().getFunctionAssignment_0_0(), "rule__FunctionCall__FunctionAssignment_0_0");
					put(grammarAccess.getFunctionCallAccess().getFunctionAssignment_1_0(), "rule__FunctionCall__FunctionAssignment_1_0");
					put(grammarAccess.getFunctionCallAccess().getParametersAssignment_1_2(), "rule__FunctionCall__ParametersAssignment_1_2");
					put(grammarAccess.getFunctionCallAccess().getParametersAssignment_1_3_1(), "rule__FunctionCall__ParametersAssignment_1_3_1");
					put(grammarAccess.getVariableNameAccess().getNameAssignment(), "rule__VariableName__NameAssignment");
					put(grammarAccess.getDeclarationAccess().getVariableAssignment_1(), "rule__Declaration__VariableAssignment_1");
					put(grammarAccess.getDeclarationAccess().getValueAssignment_3(), "rule__Declaration__ValueAssignment_3");
					put(grammarAccess.getGoToAccess().getUrlAssignment_1(), "rule__GoTo__UrlAssignment_1");
					put(grammarAccess.getCheckboxAccess().getIdAssignment_1(), "rule__Checkbox__IdAssignment_1");
					put(grammarAccess.getCheckboxAccess().getActionAssignment_3(), "rule__Checkbox__ActionAssignment_3");
					put(grammarAccess.getLinkAccess().getIdAssignment_1(), "rule__Link__IdAssignment_1");
					put(grammarAccess.getLinkAccess().getActionAssignment_3(), "rule__Link__ActionAssignment_3");
					put(grammarAccess.getButtonAccess().getIdAssignment_1(), "rule__Button__IdAssignment_1");
					put(grammarAccess.getButtonAccess().getActionAssignment_3(), "rule__Button__ActionAssignment_3");
					put(grammarAccess.getImageAccess().getIdAssignment_1(), "rule__Image__IdAssignment_1");
					put(grammarAccess.getImageAccess().getActionAssignment_3(), "rule__Image__ActionAssignment_3");
					put(grammarAccess.getTextFieldAccess().getIdAssignment_1(), "rule__TextField__IdAssignment_1");
					put(grammarAccess.getTextFieldAccess().getActionAssignment_3(), "rule__TextField__ActionAssignment_3");
					put(grammarAccess.getCheckboxActionAccess().getCheckActionAssignment_0(), "rule__CheckboxAction__CheckActionAssignment_0");
					put(grammarAccess.getLinkActionAccess().getLinkActionAssignment(), "rule__LinkAction__LinkActionAssignment");
					put(grammarAccess.getButtonActionAccess().getButtonActionAssignment(), "rule__ButtonAction__ButtonActionAssignment");
					put(grammarAccess.getImageActionAccess().getImageActionAssignment(), "rule__ImageAction__ImageActionAssignment");
					put(grammarAccess.getTextActionAccess().getTaxtActionAssignment_0(), "rule__TextAction__TaxtActionAssignment_0");
					put(grammarAccess.getClickAccess().getValAssignment(), "rule__Click__ValAssignment");
					put(grammarAccess.getIsCheckAccess().getValAssignment_1(), "rule__IsCheck__ValAssignment_1");
					put(grammarAccess.getClearAccess().getValAssignment(), "rule__Clear__ValAssignment");
					put(grammarAccess.getCheckValueAccess().getValueAssignment_1(), "rule__CheckValue__ValueAssignment_1");
					put(grammarAccess.getFillAccess().getValueAssignment_1(), "rule__Fill__ValueAssignment_1");
					put(grammarAccess.getIntValueAccess().getValueAssignment(), "rule__IntValue__ValueAssignment");
					put(grammarAccess.getStringValueAccess().getValueAssignment(), "rule__StringValue__ValueAssignment");
					put(grammarAccess.getBooleanValueAccess().getValueAssignment(), "rule__BooleanValue__ValueAssignment");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			org.xtext.mda.project.ui.contentassist.antlr.internal.InternalBrowserDSLParser typedParser = (org.xtext.mda.project.ui.contentassist.antlr.internal.InternalBrowserDSLParser) parser;
			typedParser.entryRuleProgram();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public BrowserDSLGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(BrowserDSLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
